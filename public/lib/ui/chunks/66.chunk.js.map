{"version":3,"sources":["webpack:///./src/ui/src/components/SignatureListPanel/SignatureListPanel.scss?93e8","webpack:///./src/ui/src/components/SignatureListPanel/SignatureListPanel.scss","webpack:///./src/ui/src/components/SignatureListPanel/SavedSignatures.js","webpack:///./src/ui/src/components/SignatureListPanel/SignatureAddButton.js","webpack:///./src/ui/src/components/SignatureListPanel/SignatureListPanel.js","webpack:///./src/ui/src/components/SignatureListPanel/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","SignatureRowContent","React","memo","index","onFullSignatureSetHandler","onInitialsSetHandler","isActive","altText","fullSignature","initials","isHoveredForDeletion","signatureMode","creatSignatureButton","handler","imgSrc","signatureType","className","classNames","SignatureModes","FULL_SIGNATURE","onClick","alt","src","INITIALS","displayName","SavedSignatures","props","renderInitialsHeader","savedSignatures","deleteHandler","currentlySelectedSignature","isDeleteDisabled","t","useTranslation","useState","hoveredIndexToDelete","setHoveredIndexToDelete","some","map","signatureObject","savedSignatureIndex","key","data-element","onMouseOver","onMouseLeave","Icon","glyph","SignatureAddButton","isDisabled","dispatch","useDispatch","buttonLabel","useSelector","state","selectors","getIsInitialsModeEnabled","Button","disabled","label","actions","setSignatureMode","openElement","DataElements","SIGNATURE_MODAL","SignatureListPanel","getSavedSignatures","getMaxSignaturesCount","getDisplayedSignaturesFilterFunction","isElementDisabled","getSavedInitials","getSelectedDisplayedSignatureIndex","getSignatureMode","shallowEqual","maxSignaturesCount","displayedSignaturesFilterFunction","isSignatureDeleteButtonDisabled","savedInitials","selectedSignatureIndex","signatureToolArray","core","getToolsFromAllDocumentViewers","useEffect","signatureTool","clearLocation","setSignature","setInitials","savedSignaturesAndInitials","setSavedSignaturesAndInitials","mergedSignaturesAndInitals","filter","signature","useCallback","annotation","setSelectedDisplayedSignatureIndex","setToolMode","hasLocation","addSignature","showPreview","addInitials","showInitialsPreview","deleteSignatureAndInitials","deleteSavedInitials","deleteSavedSignature","remainingSignatures","isDeletingSelectedSignature","hidePreview","defaultTool","newIndex","Math","max","DataElementWrapper","dataElement","SIGNATURE_LIST_PANEL","Divider"],"mappings":"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","file":"chunks/66.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./SignatureListPanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.SignatureAddButton{width:100%;padding:8px;color:#2b73ab;border:1px solid #2b73ab;border-radius:4px;margin:16px 0}.SignatureAddButton:not(.disabled):hover{color:var(--primary-button-hover);border-color:var(--primary-button-hover)}.SignatureAddButton.disabled{color:#2b73ab;opacity:.5;cursor:not-allowed}.SignatureAddButton.disabled span{color:#2b73ab}.SignatureListPanel{height:100%;display:flex;flex-direction:column}.SignatureListPanel .signature-list-panel-header{font-size:16px;font-weight:700}.SignatureListPanel .signature-header{margin:16px 0;font-size:14px;font-weight:700}.SignatureListPanel .signature-list{padding-top:16px;overflow:auto}.SignatureListPanel .signature-row{display:flex;flex-direction:row;height:48px;justify-content:space-between;align-items:center;margin-bottom:8px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureListPanel .signature-row{justify-content:center}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureListPanel .signature-row{justify-content:center}}.SignatureListPanel .signature-row .icon-button{padding:0;border:none;background-color:transparent;display:flex;align-items:center;justify-content:center;width:34px;height:34px;border-radius:4px;cursor:pointer}:host(:not([data-tabbing=true])) .SignatureListPanel .signature-row .icon-button,html:not([data-tabbing=true]) .SignatureListPanel .signature-row .icon-button{outline:none}.SignatureListPanel .signature-row .icon-button:hover{background:var(--tools-overlay-button-hover)}.SignatureListPanel .signature-list-header{display:flex;flex-direction:row;align-items:center;padding-bottom:8px}.SignatureListPanel .signature-list-header .signature-title{flex-grow:2;margin-right:8px;min-width:160px}.SignatureListPanel .signature-list-header .initials-title{flex-grow:1;max-width:65px}.SignatureListPanel .signature-list-header .delete-spacer{width:40px}.SignatureListPanel .signature-row-container{display:flex;flex-direction:row;align-items:center;flex-grow:1}.SignatureListPanel .signature-row-container .signature-row-content{border:none;background-color:transparent;height:40px;padding:4px 8px;border:1px solid var(--border);border-radius:4px;display:flex;align-items:center;justify-content:center;cursor:pointer;margin-right:8px;background-color:var(--gray-0);flex-grow:2}:host(:not([data-tabbing=true])) .SignatureListPanel .signature-row-container .signature-row-content,html:not([data-tabbing=true]) .SignatureListPanel .signature-row-container .signature-row-content{outline:none}.SignatureListPanel .signature-row-container .signature-row-content img{max-width:100%;max-height:100%}.SignatureListPanel .signature-row-container .signature-row-content.interactable:hover{background:var(--tools-overlay-button-hover)}.SignatureListPanel .signature-row-container .signature-row-content.active,.SignatureListPanel .signature-row-container .signature-row-content.interactable.active{background:var(--tools-overlay-button-active)}.SignatureListPanel .signature-row-container .signature-row-content.removal-hovered{background:var(--popup-button-hover)!important}.SignatureListPanel .signature-row-container .signature-row-content .signature-button-icon{width:20px;height:20px;margin-top:2px}.SignatureListPanel .signature-row-container .initials{max-width:65px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Icon from 'components/Icon';\nimport classNames from 'classnames';\nimport SignatureModes from 'constants/signatureModes';\n\nconst SignatureRowContent = React.memo(({\n  index,\n  onFullSignatureSetHandler,\n  onInitialsSetHandler,\n  isActive,\n  altText,\n  fullSignature,\n  initials,\n  isHoveredForDeletion,\n  signatureMode,\n}) => {\n  const creatSignatureButton = (handler, imgSrc, signatureType) => (\n    <button\n      className={classNames('signature-row-content', {\n        'interactable': handler,\n        'active': isActive && signatureType === signatureMode,\n        'removal-hovered': isHoveredForDeletion,\n      }, `${signatureType === SignatureModes.FULL_SIGNATURE ? 'full-signature' : 'initials'}`)}\n      onClick={() => handler(index)}\n    >\n      <img alt={altText} src={imgSrc} />\n    </button>\n  );\n\n  return (\n    <div className='signature-row-container'>\n      {creatSignatureButton(onFullSignatureSetHandler, fullSignature?.imgSrc, SignatureModes.FULL_SIGNATURE)}\n      {initials && creatSignatureButton(onInitialsSetHandler, initials.imgSrc, SignatureModes.INITIALS)}\n    </div>\n  );\n});\n\nSignatureRowContent.displayName = 'SignatureRowContent';\n\n\nconst SavedSignatures = (props) => {\n  const {\n    savedSignatures,\n    onFullSignatureSetHandler,\n    onInitialsSetHandler,\n    deleteHandler,\n    currentlySelectedSignature,\n    isDeleteDisabled,\n    signatureMode,\n  } = props;\n\n  const { t } = useTranslation();\n  const [hoveredIndexToDelete, setHoveredIndexToDelete] = React.useState(null);\n\n  const renderSignatureListHeader = () => {\n    const renderInitialsHeader = savedSignatures.some(({ initials }) => initials);\n    return (\n      <div className='signature-list-header'>\n        <div className='signature-title'>{t('signatureListPanel.signatureList.signature')}</div>\n        {renderInitialsHeader && <div className='initials-title'>{t('signatureListPanel.signatureList.initials')}</div>}\n        <div className='delete-spacer'></div>\n      </div>\n    );\n  };\n\n  if (savedSignatures.length > 0) {\n    return (<div className='signature-list'>\n      {renderSignatureListHeader()}\n      {\n        savedSignatures\n          // Need to keep the index information from the original signature list\n          .map((signatureObject, index) => [signatureObject, index])\n          .map(([{ fullSignature, initials }, savedSignatureIndex]) => {\n            return (<div\n              key={savedSignatureIndex}\n              className=\"signature-row\"\n            >\n              <SignatureRowContent\n                index={savedSignatureIndex}\n                fullSignature={fullSignature}\n                initials={initials}\n                onFullSignatureSetHandler={onFullSignatureSetHandler}\n                onInitialsSetHandler={onInitialsSetHandler}\n                isActive={currentlySelectedSignature === savedSignatureIndex}\n                altText={`${t('option.toolsOverlay.signatureAltText')} ${savedSignatureIndex + 1}`}\n                isHoveredForDeletion={hoveredIndexToDelete === savedSignatureIndex}\n                signatureMode={signatureMode}\n              />\n              {!isDeleteDisabled && (\n                <button\n                  className=\"icon-button\"\n                  data-element=\"defaultSignatureDeleteButton\"\n                  onMouseOver={() => setHoveredIndexToDelete(savedSignatureIndex)}\n                  onMouseLeave={() => setHoveredIndexToDelete(null)}\n                  onClick={() => {\n                    deleteHandler(savedSignatureIndex);\n                    setHoveredIndexToDelete(null);\n                  }}\n                >\n                  <Icon glyph=\"icon-delete-line\" />\n                </button>\n              )}\n            </div>);\n          })\n      }\n    </div>);\n  }\n  return null;\n};\n\nSavedSignatures.displayName = 'SavedSignatures';\n\nexport default React.memo(SavedSignatures);","import React from 'react';\nimport Button from '../Button';\nimport classNames from 'classnames';\nimport SignatureModes from 'constants/signatureModes';\nimport { useDispatch, useSelector } from 'react-redux';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport { useTranslation } from 'react-i18next';\nimport DataElements from 'constants/dataElement';\n\nconst SignatureAddButton = ({ isDisabled }) => {\n  const dispatch = useDispatch();\n  const [t] = useTranslation();\n\n  const openSignatureModal = () => {\n    if (!isDisabled) {\n      dispatch(actions.setSignatureMode(SignatureModes.FULL_SIGNATURE));\n      dispatch(actions.openElement(DataElements.SIGNATURE_MODAL));\n    }\n  };\n\n  const isInitialsModeEnabled = useSelector((state) => selectors.getIsInitialsModeEnabled(state));\n  const buttonLabel = isInitialsModeEnabled ? 'signatureListPanel.newSignatureAndInitial' : 'signatureListPanel.newSignature';\n\n  return (\n    <Button\n      className={classNames(\n        'SignatureAddButton',\n        { disabled: isDisabled },\n      )}\n      label={t(buttonLabel)}\n      onClick={openSignatureModal} />\n  );\n};\n\nexport default React.memo(SignatureAddButton);","import React, { useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport DataElementWrapper from '../DataElementWrapper';\nimport defaultTool from 'constants/defaultTool';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport './SignatureListPanel.scss';\nimport Divider from '../ModularComponents/Divider';\nimport SignatureModes from 'constants/signatureModes';\nimport SavedSignatures from './SavedSignatures';\nimport SignatureAddButton from './SignatureAddButton';\nimport core from 'core';\nimport DataElements from 'constants/dataElement';\n\nconst SignatureListPanel = () => {\n  const [t] = useTranslation();\n\n  const [\n    savedSignatures,\n    maxSignaturesCount,\n    displayedSignaturesFilterFunction,\n    isSignatureDeleteButtonDisabled,\n    savedInitials,\n    selectedSignatureIndex,\n    signatureMode,\n  ] = useSelector(\n    (state) => [\n      selectors.getSavedSignatures(state),\n      selectors.getMaxSignaturesCount(state),\n      selectors.getDisplayedSignaturesFilterFunction(state),\n      selectors.isElementDisabled(state, 'defaultSignatureDeleteButton'),\n      selectors.getSavedInitials(state),\n      selectors.getSelectedDisplayedSignatureIndex(state),\n      selectors.getSignatureMode(state),\n\n    ],\n    shallowEqual,\n  );\n  const signatureToolArray = core.getToolsFromAllDocumentViewers('AnnotationCreateSignature');\n\n  useEffect(() => {\n    return () => {\n      for (const signatureTool of signatureToolArray) {\n        signatureTool.clearLocation();\n        signatureTool.setSignature(null);\n        signatureTool.setInitials(null);\n      }\n    };\n  }, []);\n\n\n  // Saved signatures and initials are now in a single object. Merge them\n  const [savedSignaturesAndInitials, setSavedSignaturesAndInitials] = React.useState([]);\n  useEffect(() => {\n    const signaturesToDisplay = savedSignatures.filter((signature, index) => displayedSignaturesFilterFunction(signature, index));\n    const mergedSignaturesAndInitals = signaturesToDisplay.map((signature, index) => {\n      return {\n        fullSignature: signature,\n        initials: savedInitials[index] || null,\n      };\n    });\n    setSavedSignaturesAndInitials(mergedSignaturesAndInitals);\n  }, [savedSignatures, savedInitials, displayedSignaturesFilterFunction]);\n\n  const dispatch = useDispatch();\n\n  const setSignature = useCallback(async (index) => {\n    const { fullSignature } = savedSignaturesAndInitials[index];\n    const { annotation } = fullSignature;\n    dispatch(actions.setSelectedDisplayedSignatureIndex(index));\n    core.setToolMode('AnnotationCreateSignature');\n    for (const signatureTool of signatureToolArray) {\n      await signatureTool.setSignature(annotation);\n      if (signatureTool.hasLocation()) {\n        await signatureTool.addSignature();\n      } else {\n        await signatureTool.showPreview();\n        dispatch(actions.setSignatureMode(SignatureModes.FULL_SIGNATURE));\n      }\n    }\n  }, [savedSignaturesAndInitials]);\n\n  const setInitials = useCallback((async (index) => {\n    const { initials } = savedSignaturesAndInitials[index];\n    const { annotation } = initials;\n    dispatch(actions.setSelectedDisplayedSignatureIndex(index));\n    core.setToolMode('AnnotationCreateSignature');\n    for (const signatureTool of signatureToolArray) {\n      await signatureTool.setInitials(annotation);\n      if (signatureTool.hasLocation()) {\n        await signatureTool.addInitials();\n        // Default mode is fullSignature. If we dont reset it here there can be a bug where\n        // we preview the initials, but apply the full signature\n        dispatch(actions.setSignatureMode(SignatureModes.FULL_SIGNATURE));\n      } else {\n        await signatureTool.showInitialsPreview();\n        dispatch(actions.setSignatureMode(SignatureModes.INITIALS));\n      }\n    }\n  }), [savedSignaturesAndInitials]);\n\n  const deleteSignatureAndInitials = useCallback(async (index) => {\n    signatureToolArray[0].deleteSavedInitials(index);\n    signatureToolArray[0].deleteSavedSignature(index);\n    const remainingSignatures = signatureToolArray[0].getSavedSignatures();\n    const isDeletingSelectedSignature = selectedSignatureIndex === index;\n\n    if (isDeletingSelectedSignature) {\n      signatureToolArray.forEach((signatureTool) => {\n        signatureTool.hidePreview();\n        signatureTool.setSignature(null);\n        signatureTool.setInitials(null);\n      });\n      core.setToolMode(defaultTool);\n    }\n\n    if (remainingSignatures.length === 0) {\n      dispatch(actions.setSelectedDisplayedSignatureIndex(null));\n    } else {\n      let newIndex = selectedSignatureIndex;\n      if (isDeletingSelectedSignature || index < selectedSignatureIndex) {\n        newIndex = Math.max(0, selectedSignatureIndex - 1);\n      }\n      dispatch(actions.setSelectedDisplayedSignatureIndex(newIndex));\n    }\n  }, [selectedSignatureIndex]);\n\n\n  return (\n    <DataElementWrapper dataElement={DataElements.SIGNATURE_LIST_PANEL} className=\"Panel SignatureListPanel\">\n      <div className='signature-list-panel-header'>\n        {t('signatureListPanel.header')}\n      </div>\n      <SignatureAddButton isDisabled={savedSignaturesAndInitials.length >= maxSignaturesCount} />\n      <Divider />\n      <SavedSignatures\n        savedSignatures={savedSignaturesAndInitials}\n        onFullSignatureSetHandler={setSignature}\n        onInitialsSetHandler={setInitials}\n        deleteHandler={deleteSignatureAndInitials}\n        currentlySelectedSignature={selectedSignatureIndex}\n        isDeleteDisabled={isSignatureDeleteButtonDisabled}\n        signatureMode={signatureMode} />\n    </DataElementWrapper>\n  );\n};\n\nexport default SignatureListPanel;","import SignatureListPanel from './SignatureListPanel';\n\nexport default SignatureListPanel;"],"sourceRoot":""}