{"version":3,"sources":["webpack:///./src/ui/src/components/StylePicker/ColorPicker/ColorPicker.js","webpack:///./src/ui/src/components/StylePicker/ColorPicker/index.js","webpack:///./src/ui/src/components/StylePicker/ColorPicker/ColorPicker.scss?02e7","webpack:///./src/ui/src/components/StylePicker/ColorPicker/ColorPicker.scss","webpack:///./src/ui/src/components/RichTextStyleEditor/RichTextStyleEditor.scss?fe54","webpack:///./src/ui/src/components/RichTextStyleEditor/RichTextStyleEditor.scss","webpack:///./src/ui/src/components/RichTextStyleEditor/RichTextStyleEditor.js","webpack:///./src/ui/src/components/RichTextStyleEditor/index.js","webpack:///./src/ui/src/components/StylePicker/StylePicker.scss?c539","webpack:///./src/ui/src/components/StylePicker/StylePicker.scss","webpack:///./src/ui/src/components/StylePanel/StylePanel.scss?64d9","webpack:///./src/ui/src/components/StylePanel/StylePanel.scss","webpack:///./src/ui/src/components/StylePicker/SnapModeToggle/index.js","webpack:///./src/ui/src/components/StylePicker/SnapModeToggle/SnapModeToggle.js","webpack:///./src/ui/src/helpers/stylePanelHelper.js","webpack:///./src/ui/src/components/StylePicker/StylePicker.js","webpack:///./src/ui/src/components/StylePicker/index.js","webpack:///./src/ui/src/components/StylePanel/StylePanel.js","webpack:///./src/ui/src/components/StylePanel/StylePanelContainer.js","webpack:///./src/ui/src/components/StylePanel/index.js"],"names":["parseColor","color","parsedColor","toHexString","toLowerCase","transparentIcon","width","height","className","classNames","stroke","x1","y1","x2","y2","strokeWidth","strokeLinecap","propTypes","PropTypes","any","ColorPicker","onColorChange","hasTransparentColor","activeTool","type","activeToolName","Object","values","window","Core","Tools","ToolNames","includes","EDIT","store","useStore","t","useTranslation","dispatch","useDispatch","colors","useSelector","state","selectors","getColors","useState","selectedColor","setSelectedColor","isExpanded","setIsExpanded","forceExpandRef","useRef","useEffect","current","getCustomColorAndRemove","customColor","getCustomColor","getState","actions","setCustomColor","handleAddColor","useCallback","openElement","getInstanceNode","addEventListener","Events","VISIBILITY_CHANGED","onVisibilityChanged","e","detail","element","isVisible","newColors","setColors","removeEventListener","length","palette","map","push","indexOf","shouldHideShowMoreButton","showCopyButtonDisabled","isDeleteDisabled","slice","i","key","onClick","aria-label","active","cell","border","style","backgroundColor","Button","img","title","dataElement","indexToDelete","nextIndex","splice","disabled","hidden","api","content","__esModule","default","module","options","styleTag","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","annotation","object","editor","shape","TextColor","RichTextStyle","isFreeTextAutoSize","bool","onFreeTextSizeToggle","func","onPropertyChange","onRichTextStyleChange","isRedaction","isRichTextEditMode","setIsRichTextEditMode","isTextStylePickerHidden","RichTextStyleEditor","textSizeSliderComponent","fonts","getFonts","shallowEqual","format","setFormat","editorRef","annotationRef","propertiesRef","oldSelectionRef","richTextEditModeRef","handleSelectionChange","range","oldRange","setSelection","index","getFormat","handleTextChange","getSelection","core","disableElements","DataElements","ANNOTATION_STYLE_POPUP","enableElements","StrokeStyle","err","console","error","stylesTemp","getRichTextStyle","Font","FontSize","TextAlign","TextVerticalAlign","bold","italic","underline","strikeout","size","font","calculatedFontSize","getCalculatedFontSize","handleEditorBlur","handleEditorFocus","properties","Annotations","Color","Array","isArray","lastSelectedColor","prop","undefined","applyFormat","formatKey","value","defulats","strike","quillFont","quillFontSize","originalSize","onMouseDown","preventDefault","TextStylePicker","property","blur","FreeTextAnnotation","getAutoSizeType","AutoSizeTypes","NONE","doc","getDocument","pageNumber","pageInfo","getPageInfo","pageMatrix","getPageMatrix","pageRotation","getPageRotation","fitText","adjustFreeTextBoundingBox","setTimeout","getAnnotationManager","getEditBoxManager","focusBox","propertyTranslation","newSelection","currentFormat","handleTextFormatChange","stateless","isFreeText","name","handleColorChange","React","memo","SnapModeToggle","Scale","Precision","isSnapModeEnabled","wasDocumentSwappedToClientSide","getType","workerTypes","WEBVIEWER_SERVER","isWebViewerServerDocument","isEligibleDocumentForSnapping","PDF","showMeasurementSnappingOption","isFullPDFEnabled","Choice","id","label","i18next","checked","onChange","event","enableSnapping","target","mode","getDocumentViewer","SnapMode","e_DefaultSnapMode","POINT_ON_LINE","getMeasurementTools","tool","setSnapMode","setEnableSnapMode","shouldHideStylePanelOptions","toolName","CheckBoxFormFieldCreateTool","RadioButtonFormFieldCreateTool","AddParagraphTool","AddImageContentTool","CropCreateTool","SnippingCreateTool","SignatureFormFieldCreateTool","some","getTool","shouldHideOpacitySlider","RedactionCreateTool","EraserTool","TextFormFieldCreateTool","ListBoxFormFieldCreateTool","ComboBoxFormFieldCreateTool","shouldHideTransparentFillColor","stylePanelSectionTitles","section","toolTitles","shouldHideTextStylePicker","TEXT_FORM_FIELD","LIST_BOX_FIELD","COMBO_BOX_FIELD","withCloudyStyle","defaultStrokeStyles","concat","cloudyStrokeStyle","onStyleChange","isRequired","sliderProperties","arrayOf","string","isEllipse","redactionLabelProperties","isFreeHand","showLineStyleOptions","isArc","isStamp","isInFormFieldCreationMode","startLineStyle","endLineStyle","strokeStyle","onLineStyleChange","handleRichTextStyleChange","activeType","StylePicker","saveEditorInstance","StrokeColor","strokeColor","setStrokeColor","startingLineStyle","setStartingLineStyle","endingLineStyle","setEndingLineStyle","strokeLineStyle","setStrokeLineStyle","FillColor","fillColor","setFillColor","hideStrokeStyle","RubberStampCreateTool","StampCreateTool","showFillColorAndCollapsablePanelSections","RectangleCreateTool","EllipseCreateTool","PolygonCreateTool","PolygonCloudCreateTool","EllipseMeasurementCreateTool","AreaMeasurementCreateTool","FreeTextCreateTool","CalloutCreateTool","hasFillColorAndCollapsablePanelSections","hideFillColorAndCollapsablePanelSections","shouldHideFillColorAndCollapsablePanelSections","hideStrokeSlider","TextUnderlineCreateTool","TextHighlightCreateTool","TextSquigglyCreateTool","TextStrikeoutCreateTool","CountMeasurementCreateTool","FileAttachmentCreateTool","StickyCreateTool","MarkInsertTextCreateTool","MarkReplaceTextCreateTool","shouldHideStrokeSlider","showSnapModeCheckbox","DistanceMeasurementCreateTool","ArcMeasurementCreateTool","PerimeterMeasurementCreateTool","RectangularAreaMeasurementCreateTool","CloudyRectangularAreaMeasurementCreateTool","hasSnapModeCheckbox","showTextStyle","shouldShowTextStyle","RICH_TEXT_STYLE_CONTAINER","STROKE_STYLE_CONTAINER","closeElement","ANNOTATION_POPUP","onSliderChange","Opacity","StrokeThickness","isElementDisabled","STYLE_OPTION","isElementOpen","FILL_COLOR_CONTAINER","OPACITY_CONTAINER","isStyleOptionDisabled","isStrokeStyleContainerActive","isFillColorContainerActive","isOpacityContainerActive","isTextStyleContainerActive","panelItems","togglePanelItem","openTextStyleContainer","openElements","RICH_TEXT_EDITOR","openStrokeStyleContainer","openFillColorContainer","openOpacityContainer","renderSlider","shouldHideSliderTitle","sliderProps","lineStart","circleRadius","displayProperty","getDisplayValue","Math","round","OPACITY_SLIDER","getCirclePosition","lineLength","convertRelativeCirclePositionToValue","circlePosition","withInputField","inputFieldType","min","max","step","getLocalValue","opacity","parseInt","strokeThickness","placeOfDecimal","floor","toString","split","parseFloat","toFixed","STROKE_THICKNESS_SLIDER","FONT_SIZE_SLIDER","getSliderProps","Slider","renderDivider","onOpenProps","useOnFreeTextEdit","textSizeSlider","strokethicknessComponent","toUpperCase","tabIndex","onKeyDown","role","Icon","glyph","LabelTextEditor","placeholderText","colorMapKey","Dropdown","images","defaultStartLineStyles","onClickItem","currentSelectionKey","defaultEndLineStyles","StylePanel","getToolButtonObjects","isAnnotationToolStyleSyncingEnabled","getActiveDocumentViewerKey","isPanelOpen","toolButtonObject","activeDocumentViewerKey","currentTool","getToolMode","currentToolName","colorProperties","showStyles","setShowStyles","noToolStyle","setNoToolStyle","setIsEllipse","setIsFreeText","REDACTION","setIsRedaction","defaultTool","setIsTextStylePickerHidden","setIsFreeHand","setIsArc","setIsStamp","setIsInFormFieldCreationMode","setStyle","setStartLineStyle","setEndLineStyle","setStrokeStyle","panelTitle","setPanelTitle","annotationCreateToolNames","getAnnotationCreateToolNames","getDataWithKey","mapToolNameToKey","hasLineEndings","setShowLineStyleOptions","isAutoSizeFont","setIsAutoSizeFont","setActiveTool","editorInstance","setEditorInstance","setToolMode","getPanelTitleOnAnnotationSelected","annot","isContentEditPlaceholder","ToolName","setPanelTitleForSelectedTool","updateStylePanelProps","extraStyles","jsonData","inputText","uniqueFontFamilies","Set","uniqueFontSizes","hasOwnProperty","isNaN","add","trim","from","sizes","extractUniqueFontFamilies","getContents","RedactionAnnotation","OverlayText","RectangleAnnotation","isFormFieldPlaceholder","getStartStyle","getEndStyle","dashes","getStrokeStyle","handleToolModeChange","newTool","ELLIPSE","FREETEXT","FREEHAND","FREEHAND_HIGHLIGHT","ARC","STAMP","getFormFieldCreationManager","toolStyles","getToolStyles","StartLineStyle","EndLineStyle","onAnnotationSelected","annotations","action","EllipseAnnotation","FreeHandAnnotation","ArcAnnotation","StampAnnotation","AnnotationEditTool","selectedAnnotations","getSelectedAnnotations","noToolSelected","newStyle","annotationsToUpdate","hasFocus","background","colorRGB","hexToRGBA","r","g","b","a","setToolStyles","redrawAnnotation","sectionPropertyMap","start","middle","end","setStartStyle","lineStyle","shift","Style","Dashes","setEndStyle","handleFreeTextAutoSizeToggle","originalProperty","originalValue","activeToolRichTextStyle","getTextDecoration","richTextStyle","0","updateAnnotationRichTextStyle","complete","StylePanelContainer","DataElementWrapper"],"mappings":"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","file":"chunks/33.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport './ColorPicker.scss';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport actions from 'actions';\nimport { useDispatch, useStore, useSelector } from 'react-redux';\nimport Events from 'constants/events';\nimport { getInstanceNode } from 'helpers/getRootNode';\nimport selectors from 'selectors';\nimport Button from 'components/Button';\n\nconst parseColor = (color) => {\n  if (!color) {\n    return color;\n  }\n  let parsedColor = color;\n  if (parsedColor?.toHexString) {\n    parsedColor = parsedColor.toHexString();\n  }\n  if (parsedColor?.toLowerCase) {\n    parsedColor = parsedColor.toLowerCase();\n  }\n\n  return parsedColor;\n};\n\nconst TRANSPARENT_COLOR = 'transparent';\n\nconst transparentIcon = (\n  <svg\n    width=\"100%\"\n    height=\"100%\"\n    className={classNames('transparent')}\n  >\n    <line stroke=\"#d82e28\" x1=\"0\" y1=\"100%\" x2=\"100%\" y2=\"0\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n  </svg>\n);\n\n\nconst propTypes = {\n  color: PropTypes.any\n};\n\nconst ColorPicker = ({\n  onColorChange,\n  hasTransparentColor = false,\n  color,\n  activeTool,\n  type,\n}) => {\n  const activeToolName = Object.values(window.Core.Tools.ToolNames).includes(activeTool) ? activeTool : window.Core.Tools.ToolNames.EDIT;\n  const store = useStore();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [colors] = useSelector((state) => [\n    selectors.getColors(state, activeToolName, type),\n  ]);\n  const [selectedColor, setSelectedColor] = useState();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const forceExpandRef = useRef(true);\n\n  useEffect(() => {\n    forceExpandRef.current = true;\n  }, [activeToolName, color]);\n\n  useEffect(() => {\n    if (color) {\n      setSelectedColor(parseColor(color));\n    }\n  }, [color]);\n\n  const getCustomColorAndRemove = () => {\n    const customColor = selectors.getCustomColor(store.getState());\n    dispatch(actions.setCustomColor(null));\n    return customColor;\n  };\n\n  const handleAddColor = useCallback(() => {\n    dispatch(actions.openElement('ColorPickerModal'));\n    const onVisibilityChanged = (e) => {\n      const { element, isVisible } = e.detail;\n      if (element === 'ColorPickerModal' && !isVisible) {\n        const color = parseColor(getCustomColorAndRemove());\n        if (color) {\n          if (colors.includes(color)) {\n            setSelectedColor(color);\n            onColorChange(color);\n          } else {\n            const newColors = [...colors, color];\n            dispatch(actions.setColors(newColors, activeToolName, type, true));\n            setSelectedColor(color);\n            onColorChange(color);\n          }\n        }\n      }\n      getInstanceNode().removeEventListener(Events.VISIBILITY_CHANGED, onVisibilityChanged);\n    };\n    getInstanceNode().addEventListener(Events.VISIBILITY_CHANGED, onVisibilityChanged);\n  }, [colors?.length, dispatch, setSelectedColor, onColorChange, getCustomColorAndRemove, type, activeToolName]);\n\n  const handleDelete = () => {\n    const color = parseColor(selectedColor);\n    const newColors = [...colors];\n    const indexToDelete = newColors.indexOf(color);\n    if (indexToDelete > -1) {\n      const nextIndex = indexToDelete === newColors.length - 1 ? 0 : indexToDelete + 1;\n      setSelectedColor(colors[nextIndex]);\n      onColorChange(colors[nextIndex]);\n      newColors.splice(indexToDelete, 1);\n      dispatch(actions.setColors(newColors, activeToolName, type, true));\n    }\n  };\n\n  const handleCopyColor = () => {\n    const color = parseColor(selectedColor);\n    const newColors = [...colors, color];\n    dispatch(actions.setColors(newColors, activeToolName, type, true));\n  };\n\n  const toggleExpanded = () => {\n    const newValue = !isExpanded;\n    setIsExpanded(newValue);\n  };\n\n  let palette = colors.map((color) => color.toLowerCase());\n  if (hasTransparentColor) {\n    palette.push(TRANSPARENT_COLOR);\n  }\n\n  if (!selectedColor) {\n    setSelectedColor('transparent');\n  }\n\n  if (palette.indexOf(selectedColor) > 6 && !isExpanded && forceExpandRef.current) {\n    setIsExpanded(true);\n    forceExpandRef.current = false;\n  }\n\n  const shouldHideShowMoreButton = palette.length <= 7;\n  const showCopyButtonDisabled = !(selectedColor && !palette.includes(selectedColor));\n  const isDeleteDisabled = palette.length <= 1 || !showCopyButtonDisabled;\n\n  if (!isExpanded) {\n    palette = palette.slice(0, 7);\n  }\n\n  return (\n    <>\n      <div className={classNames('ColorPalette')}>\n        {palette.map((color) => parseColor(color)).map((color, i) => (\n          !color\n            ? <div key={i} className=\"dummy-cell\"/>\n            : <button\n              key={i}\n              className=\"cell-container\"\n              onClick={() => {\n                setSelectedColor(color);\n                onColorChange(color);\n              }}\n              aria-label={`${t('option.colorPalette.colorLabel')} ${i + 1}`}\n            >\n              <div\n                className={classNames({\n                  'cell-outer': true,\n                  active: parseColor(selectedColor) === color || (!parseColor(selectedColor) && color === TRANSPARENT_COLOR),\n                })}\n              >\n                <div\n                  className={classNames({\n                    cell: true,\n                    border: color === '#ffffff' || color === TRANSPARENT_COLOR,\n                  })}\n                  style={{ backgroundColor: color }}\n                >\n                  {color === TRANSPARENT_COLOR && transparentIcon}\n                </div>\n              </div>\n            </button>\n        ))}\n      </div>\n      <div className=\"palette-controls\">\n        <div className=\"button-container\">\n          <Button\n            img=\"icon-header-zoom-in-line\"\n            title={t('action.addNewColor')}\n            onClick={handleAddColor}\n            className=\"control-button\"\n            dataElement=\"addCustomColor\"\n          />\n          <Button\n            img=\"icon-delete-line\"\n            title={t('action.deleteColor')}\n            onClick={handleDelete}\n            disabled={isDeleteDisabled}\n            className=\"control-button\"\n            dataElement=\"deleteSelectedColor\"\n          />\n          <Button\n            img=\"icon-copy2\"\n            title={t('action.copySelectedColor')}\n            onClick={handleCopyColor}\n            disabled={showCopyButtonDisabled}\n            className=\"control-button\"\n            dataElement=\"copySelectedColor\"\n          />\n        </div>\n        <button className={classNames('show-more-button control-button', {\n          hidden: shouldHideShowMoreButton,\n        })} onClick={toggleExpanded}>\n          {t(isExpanded ? 'message.showLess' : 'message.showMore')}\n        </button>\n      </div>\n    </>\n  );\n};\n\nColorPicker.propTypes = propTypes;\n\nexport default ColorPicker;","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../../node_modules/sass-loader/dist/cjs.js!./ColorPicker.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.StylePicker .ColorPalette{display:flex;flex-wrap:wrap;display:grid;grid-template-columns:repeat(7,1fr);grid-row-gap:8px;row-gap:8px;justify-items:center}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.StylePicker .ColorPalette{width:196px}}.StylePicker .ColorPalette.padding{padding:4px 12px 8px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette{max-width:450px;width:auto}}@media(max-width:640px)and (-ms-high-contrast:active),(max-width:640px)and (-ms-high-contrast:none){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette{width:308px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette{max-width:450px;width:auto}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette{width:308px}}}.StylePicker .ColorPalette .cell-container{padding:0;border:none;background-color:transparent;flex:1 0 14%;cursor:pointer;width:28px;height:28px;display:flex;align-items:center;justify-content:center}:host(:not([data-tabbing=true])) .StylePicker .ColorPalette .cell-container,html:not([data-tabbing=true]) .StylePicker .ColorPalette .cell-container{outline:none}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container{width:44px;height:44px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container{width:44px;height:44px}}.StylePicker .ColorPalette .cell-container .cell-outer.active{border:1px solid var(--color-palette-border);width:26px;height:26px;border-radius:10000000px;display:flex;align-items:center;justify-content:center}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container .cell-outer.active{width:36px;height:36px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container .cell-outer.active{width:36px;height:36px}}.StylePicker .ColorPalette .cell-container .cell-outer .cell{width:18px;height:18px;border-radius:10000000px}.StylePicker .ColorPalette .cell-container .cell-outer .cell .transparent{border:2px solid var(--faded-text);border-radius:10000000px}.StylePicker .ColorPalette .cell-container .cell-outer .cell.border{border:1px solid var(--white-color-palette-border)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container .cell-outer .cell{width:24px;height:24px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container .cell-outer .cell{width:24px;height:24px}}.StylePicker .palette-controls{padding-right:12px;padding-left:2px;display:flex;justify-content:space-between}.StylePicker .palette-controls .button-container{display:flex;grid-gap:8px;gap:8px}.StylePicker .palette-controls .control-button{display:flex;align-items:center;justify-content:center;text-align:center;min-width:32px;min-height:32px;padding:0;border:none;background-color:transparent;cursor:pointer;border-radius:4px}:host(:not([data-tabbing=true])) .StylePicker .palette-controls .control-button,html:not([data-tabbing=true]) .StylePicker .palette-controls .control-button{outline:none}.StylePicker .palette-controls .control-button.show-more-button{color:var(--ribbon-active-color)}.StylePicker .palette-controls .control-button.show-more-button:hover{background:none;color:var(--primary-button-hover)}.StylePicker .palette-controls .control-button:disabled{cursor:default}.StylePicker .palette-controls .control-button:disabled .Icon{color:var(--disabled-icon)}.StylePicker .palette-controls .control-button.hidden{display:none}.StylePicker .palette-controls .control-button:hover{background:var(--view-header-button-hover)}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./RichTextStyleEditor.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}@-webkit-keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@-webkit-keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}@keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}.RichTextStyleEditor{margin-bottom:16px}.RichTextStyleEditor .menu-items{margin-bottom:8px!important}.RichTextStyleEditor .menu-items .icon-grid{padding-top:12px;grid-row-gap:12px;row-gap:12px}.RichTextStyleEditor .menu-items .icon-grid .row{padding-top:0}.RichTextStyleEditor .menu-items .icon-grid .row.isRedaction{padding-bottom:8px}.RichTextStyleEditor .menu-items .icon-grid .auto-size-checkbox{padding-top:4px;padding-bottom:8px}.RichTextStyleEditor .Dropdown__wrapper{width:100%}.RichTextStyleEditor .Dropdown__wrapper .Dropdown{width:100%!important}.RichTextStyleEditor .Dropdown__wrapper .Dropdown__items{right:unset}.RichTextStyleEditor .FontSizeDropdown{width:100%}.RichTextStyleEditor .ColorPalette{padding-bottom:8px}.RichTextStyleEditor .text-size-slider{margin-top:16px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RichTextStyleEditor .icon-grid{display:flex;flex-direction:column}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .RichTextStyleEditor .icon-grid{display:flex;flex-direction:column}}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ColorPicker from 'components/StylePicker/ColorPicker';\nimport core from 'core';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport './RichTextStyleEditor.scss';\nimport DataElements from 'constants/dataElement';\nimport TextStylePicker from 'components/TextStylePicker';\n\nconst propTypes = {\n  annotation: PropTypes.object,\n  editor: PropTypes.object,\n  style: PropTypes.shape({\n    TextColor: PropTypes.object,\n    RichTextStyle: PropTypes.any,\n  }),\n  isFreeTextAutoSize: PropTypes.bool,\n  onFreeTextSizeToggle: PropTypes.func,\n  onPropertyChange: PropTypes.func,\n  onRichTextStyleChange: PropTypes.func,\n  isRedaction: PropTypes.bool,\n  isRichTextEditMode: PropTypes.bool,\n  setIsRichTextEditMode: PropTypes.func,\n  isTextStylePickerHidden: PropTypes.bool,\n};\n\nconst RichTextStyleEditor = ({\n  annotation, editor,\n  style,\n  isFreeTextAutoSize,\n  onFreeTextSizeToggle,\n  onPropertyChange,\n  onRichTextStyleChange,\n  isRichTextEditMode,\n  setIsRichTextEditMode,\n  isRedaction,\n  isTextStylePickerHidden,\n  activeTool,\n  textSizeSliderComponent,\n}) => {\n  const [\n    fonts,\n  ] = useSelector(\n    (state) => [\n      selectors.getFonts(state),\n    ],\n    shallowEqual,\n  );\n\n  const [format, setFormat] = useState({});\n  const editorRef = useRef(null);\n  const annotationRef = useRef(null);\n  const propertiesRef = useRef({});\n  const dispatch = useDispatch();\n  const oldSelectionRef = useRef();\n  const richTextEditModeRef = useRef();\n  richTextEditModeRef.current = isRichTextEditMode;\n\n  useEffect(() => {\n    const handleSelectionChange = (range, oldRange) => {\n      const shouldRestoreLostSelection = !range && oldRange && editorRef.current;\n      if (shouldRestoreLostSelection) {\n        editorRef.current.setSelection(oldRange.index, oldRange.length);\n      }\n      if (range && editorRef.current) {\n        setFormat(getFormat(range));\n      }\n    };\n    const handleTextChange = () => {\n      setFormat(getFormat(editorRef.current?.getSelection()));\n    };\n    core.addEventListener('editorSelectionChanged', handleSelectionChange);\n    core.addEventListener('editorTextChanged', handleTextChange);\n    // Have to disable instead of closing because annotation popup will reopen itself\n    dispatch(actions.disableElements([DataElements.ANNOTATION_STYLE_POPUP]));\n    return () => {\n      core.removeEventListener('editorSelectionChanged', handleSelectionChange);\n      core.removeEventListener('editorTextChanged', handleTextChange);\n      dispatch(actions.enableElements([DataElements.ANNOTATION_STYLE_POPUP]));\n    };\n  }, []);\n\n  useEffect(() => {\n    editorRef.current = editor;\n    annotationRef.current = annotation;\n    if (isRichTextEditMode && annotation) {\n      let StrokeStyle = 'solid';\n      try {\n        StrokeStyle = (annotation['Style'] === 'dash')\n          ? `${annotation['Style']},${annotation['Dashes']}`\n          : annotation['Style'];\n      } catch (err) {\n        console.error(err);\n      }\n      const richTextStyles = annotation.getRichTextStyle();\n      const stylesTemp = richTextStyles[0];\n\n      propertiesRef.current = {\n        Font: annotation.Font,\n        FontSize: annotation.FontSize,\n        TextAlign: annotation.TextAlign,\n        TextVerticalAlign: annotation.TextVerticalAlign,\n        bold: stylesTemp?.['font-weight'] === 'bold' ?? false,\n        italic: stylesTemp?.['font-style'] === 'italic' ?? false,\n        underline: stylesTemp?.['text-decoration']?.includes('underline')\n          || stylesTemp?.['text-decoration']?.includes('word'),\n        strikeout: stylesTemp?.['text-decoration']?.includes('line-through') ?? false,\n        size: stylesTemp?.['font-size'],\n        font: stylesTemp?.['font-family'],\n        StrokeStyle,\n        calculatedFontSize: annotation.getCalculatedFontSize()\n      };\n    }\n\n    setFormat(getFormat(editorRef.current?.getSelection()));\n\n    if (oldSelectionRef.current) {\n      editorRef.current.setSelection(oldSelectionRef.current);\n      oldSelectionRef.current = null;\n    }\n  }, [annotation, editor, isRichTextEditMode]);\n\n  useEffect(() => {\n    const handleEditorBlur = () => {\n      editorRef.current = null;\n      annotationRef.current = null;\n      setIsRichTextEditMode(false);\n    };\n    const handleEditorFocus = () => {\n      setIsRichTextEditMode(true);\n    };\n\n    core.addEventListener('editorBlur', handleEditorBlur);\n    core.addEventListener('editorFocus', handleEditorFocus);\n    return () => {\n      core.removeEventListener('editorBlur', handleEditorBlur);\n      core.removeEventListener('editorFocus', handleEditorFocus);\n    };\n  }, [dispatch]);\n\n\n  const getFormat = (range) => {\n    if (!range) {\n      return {};\n    }\n\n    const format = editorRef.current.getFormat(range.index, range.length);\n\n    if (typeof format.color === 'string') {\n      format.color = new window.Core.Annotations.Color(format.color);\n    } else if (Array.isArray(format.color)) {\n      // the selection contains multiple color, so we set the current color to the last selected color\n      const lastSelectedColor = new window.Core.Annotations.Color(format.color[format.color.length - 1]);\n      format.color = lastSelectedColor;\n    } else if (!format.color) {\n      format.color = annotationRef.current.TextColor;\n    }\n\n    const propertiesToCheck = ['font', 'size', 'originalSize'];\n\n    for (const prop of propertiesToCheck) {\n      if (format[prop] && Array.isArray(format[prop])) {\n        format[prop] = undefined;\n      }\n    }\n\n    return format;\n  };\n\n  const handleTextFormatChange = (format) => () => {\n    let { index, length } = editorRef.current.getSelection();\n    if (length === 0) {\n      oldSelectionRef.current = { index, length };\n      const newSelection = editorRef.current.getSelection();\n      index = newSelection.index;\n      length = newSelection.length;\n    }\n    const currentFormat = editorRef.current.getFormat(index, length);\n\n    applyFormat(format, !currentFormat[format]);\n  };\n\n  const handleColorChange = (name, color) => {\n    if (!richTextEditModeRef.current) {\n      onPropertyChange(name, color);\n      return;\n    }\n    applyFormat('color', color.toHexString());\n  };\n\n  const applyFormat = (formatKey, value) => {\n    if (formatKey === 'size') {\n      editorRef.current?.format('applyCustomFontSize', value);\n    } else {\n      editorRef.current?.format(formatKey, value);\n    }\n\n    if (formatKey === 'color') {\n      value = new window.Core.Annotations.Color(value);\n    }\n\n    // format the entire editor doesn't trigger the editorTextChanged event, so we set the format state here\n    setFormat({\n      ...format,\n      [formatKey]: value\n    });\n  };\n\n  const adjustFreeTextBoundingBox = (annotation) => {\n    const { FreeTextAnnotation } = window.Core.Annotations;\n    if (annotation instanceof FreeTextAnnotation && annotation.getAutoSizeType() !== FreeTextAnnotation.AutoSizeTypes.NONE) {\n      const doc = core.getDocument();\n      const pageNumber = annotation['PageNumber'];\n      const pageInfo = doc.getPageInfo(pageNumber);\n      const pageMatrix = doc.getPageMatrix(pageNumber);\n      const pageRotation = doc.getPageRotation(pageNumber);\n      annotation.fitText(pageInfo, pageMatrix, pageRotation);\n    }\n  };\n\n  // onPropertyChange\n  const handlePropertyChange = (property, value) => {\n    if (!richTextEditModeRef.current) {\n      onPropertyChange(property, value);\n      return;\n    }\n\n    const { index, length } = editorRef.current.getSelection();\n    const annotation = annotationRef.current;\n    annotation[property] = value;\n    editorRef.current.blur();\n    if (property === 'FontSize' || property === 'Font') {\n      adjustFreeTextBoundingBox(annotation);\n    }\n    setTimeout(() => {\n      oldSelectionRef.current = { index, length };\n      const editBoxManager = core.getAnnotationManager().getEditBoxManager();\n      editBoxManager.focusBox(annotation);\n    }, 0);\n  };\n\n\n  // onRichTextStyleChange\n  const handleRichTextStyleChange = (property, value) => {\n    if (!richTextEditModeRef.current) {\n      onRichTextStyleChange(property, value);\n      return;\n    }\n\n    const propertyTranslation = {\n      'font-weight': 'bold',\n      'font-style': 'italic',\n      'underline': 'underline',\n      'line-through': 'strike',\n      'font-family': 'font',\n      'font-size': 'size',\n    };\n    if (property === 'font-family' || property === 'font-size') {\n      applyFormat(propertyTranslation[property], value);\n    } else {\n      handleTextFormatChange(propertyTranslation[property])();\n    }\n  };\n\n  let properties = {};\n\n  const { RichTextStyle } = style;\n  const defulats = {\n    bold: RichTextStyle?.[0]?.['font-weight'] === 'bold' ?? false,\n    italic: RichTextStyle?.[0]?.['font-style'] === 'italic' ?? false,\n    underline: RichTextStyle?.[0]?.['text-decoration']?.includes('underline') || RichTextStyle?.[0]?.['text-decoration']?.includes('word'),\n    strikeout: RichTextStyle?.[0]?.['text-decoration']?.includes('line-through') ?? false,\n    font: RichTextStyle?.[0]?.['font-family'],\n    size: RichTextStyle?.[0]?.['font-size'],\n    StrokeStyle: 'solid',\n  };\n\n  properties = {\n    ...style,\n    ...defulats,\n  };\n\n  if (isRichTextEditMode && annotation) {\n    propertiesRef.current.bold = format.bold;\n    propertiesRef.current.italic = format.italic;\n    propertiesRef.current.underline = format.underline;\n    propertiesRef.current.strikeout = format.strike;\n    propertiesRef.current.quillFont = format.font || propertiesRef.current.Font;\n    propertiesRef.current.quillFontSize = format.originalSize || propertiesRef.current.FontSize;\n  }\n\n  return (\n    <div className=\"RichTextStyleEditor\"\n      onMouseDown={(e) => {\n        if (e.type !== 'touchstart' && isRichTextEditMode) {\n          e.preventDefault();\n        }\n      }}\n    >\n      {!isTextStylePickerHidden && (\n        <div className=\"menu-items\">\n          <TextStylePicker\n            fonts={fonts}\n            onPropertyChange={handlePropertyChange}\n            onRichTextStyleChange={handleRichTextStyleChange}\n            properties={isRichTextEditMode ? propertiesRef.current : properties}\n            stateless={true}\n            isFreeText={!isRedaction}\n            onFreeTextSizeToggle={onFreeTextSizeToggle}\n            isFreeTextAutoSize={isFreeTextAutoSize}\n            isRichTextEditMode={isRichTextEditMode}\n            isRedaction={isRedaction}\n          />\n        </div>\n      )}\n      <ColorPicker\n        onColorChange={(color) => {\n          handleColorChange('TextColor', new window.Core.Annotations.Color(color));\n        }}\n        color={isRichTextEditMode ? format.color : style['TextColor']}\n        activeTool={activeTool}\n        type={'Text'}\n      />\n      {textSizeSliderComponent}\n    </div>\n  );\n};\nRichTextStyleEditor.propTypes = propTypes;\n\nexport default React.memo(RichTextStyleEditor);\n","import RichTextStyleEditor from './RichTextStyleEditor';\n\nexport default RichTextStyleEditor;","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./StylePicker.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".StylePicker{display:flex;flex-direction:column}.StylePicker .slider-property{font-size:14px;font-weight:700;margin-bottom:8px}.StylePicker .StyleOption{margin-bottom:16px}.StylePicker .StyleOption .styles-container .styles-title{margin:0 0 8px;font-size:14px;font-weight:700}.StylePicker .StyleOption .styles-container [data-element=borderStylePicker]{margin-top:8px}.StylePicker .StyleOption .slider:only-child{margin-bottom:0}.StylePicker .StyleOption .slider .slider-element-container{margin-left:-3px}.StylePicker .StyleOption:last-child{margin-bottom:0}.StylePicker .PanelSection{margin-bottom:16px}.StylePicker .PanelSection .PanelSubsection{margin-bottom:12px}.StylePicker .PanelSection .PanelSubsection .menu-subtitle{font-size:14px;font-weight:700;margin-bottom:12px}.StylePicker .PanelSection .collapsible-menu{width:100%;display:flex;cursor:pointer;position:relative;align-items:center;margin-bottom:16px}.StylePicker .PanelSection .collapsible-menu .menu-title{padding-top:6px;padding-bottom:6px;font-weight:700;font-size:16px}.StylePicker .PanelSection .collapsible-menu .icon-container{position:absolute;right:0;display:flex;align-items:center;justify-content:center;text-align:center;min-width:28px;min-height:28px;border-radius:4px}.StylePicker .PanelSection .collapsible-menu .icon-container .Icon{height:18px;width:18px;color:var(--icon-color)}.StylePicker .PanelSection .collapsible-menu .icon-container:hover{background:var(--view-header-button-hover)}.StylePicker .PanelSection .divider{background-color:var(--divider);width:100%;height:1px}.StylePicker .PanelSection .menu-items{margin-bottom:16px}.StylePicker .PanelSection .menu-items:only-child{margin-bottom:0}.StylePicker .PanelSection .menu-items .ColorPalette{margin-bottom:8px}.StylePicker .PanelSection .slider{margin-bottom:16px}.StylePicker .PanelSection .slider:last-child,.StylePicker .PanelSection:empty,.StylePicker .PanelSection:last-child{margin-bottom:0}.StylePicker .spacer{width:100%}.StylePicker .Dropdown,.StylePicker .FontSizeDropdown,.StylePicker .overlay-text-input{height:32px}.StylePicker .lineStyleContainer{margin-bottom:0}.StylePicker .lineStyleContainer .StylePicker-LineStyle{display:flex;flex-direction:row;grid-column-gap:8px;-moz-column-gap:8px;column-gap:8px;justify-content:space-between}.StylePicker .lineStyleContainer .StylePicker-LineStyle button.Dropdown{width:100%!important}.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__items,.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__wrapper{width:100%}.StylePicker .lineStyleContainer .StylePicker-LineStyle .linestyle-image svg{width:35px;margin-top:11px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .linestyle-image.shift-alignment svg{margin-top:8px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__items .linestyle-image svg{width:45px}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .linestyle-image.shift-alignment{padding-top:0}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .linestyle-image.shift-alignment svg{margin-top:11px}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .Dropdown__items{top:-197px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .StyleOptions{max-width:80px}.StylePicker .lineStyleContainer .StylePicker-LineStyle>*{flex-grow:1;flex-basis:0}\", \"\"]);\n\n// exports\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./StylePanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.StylePanel{display:flex;flex-direction:column;background-color:var(--panel-background);padding-bottom:75px}.StylePanel .style-panel-header{font-size:16px;font-weight:700;margin-bottom:16px}.StylePanel .label{padding-top:16px;font-size:14px;font-weight:700}.StylePanel .no-tool-selected{padding-top:36px;display:flex;flex-direction:column;align-items:center;flex:1 1 auto}.StylePanel .no-tool-selected .msg{padding-top:24px;font-size:14px;text-align:center}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePanel .no-tool-selected .msg{line-height:15px;width:146px}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePanel .no-tool-selected .msg{line-height:15px;width:146px}}.StylePanel .no-tool-selected .empty-icon,.StylePanel .no-tool-selected .empty-icon svg{width:55px;height:56px}.StylePanel .no-tool-selected .empty-icon *{fill:var(--gray-5);color:var(--gray-5)}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import SnapModeToggle from './SnapModeToggle';\n\nexport default SnapModeToggle;","import React from 'react';\nimport { workerTypes } from 'constants/types';\nimport core from 'core';\nimport i18next from 'i18next';\nimport Choice from 'components/Choice/Choice';\nimport getMeasurementTools from 'helpers/getMeasurementTools';\nimport actions from 'actions';\nimport { useDispatch } from 'react-redux';\n\nconst SnapModeToggle = ({\n  Scale,\n  Precision,\n  isSnapModeEnabled,\n}) => {\n  const dispatch = useDispatch();\n\n  const wasDocumentSwappedToClientSide =\n    core.getDocument()?.getType() === workerTypes.WEBVIEWER_SERVER && core.getDocument().isWebViewerServerDocument();\n  const isEligibleDocumentForSnapping = core.getDocument()?.getType().toLowerCase() === workerTypes.PDF || wasDocumentSwappedToClientSide;\n  const showMeasurementSnappingOption = Scale && Precision && isEligibleDocumentForSnapping && core.isFullPDFEnabled();\n\n  const onSnappingChange = (event) => {\n    if (!core.isFullPDFEnabled()) {\n      return;\n    }\n\n    const enableSnapping = event.target.checked;\n    const mode = enableSnapping\n      ? core.getDocumentViewer().SnapMode.e_DefaultSnapMode | core.getDocumentViewer().SnapMode.POINT_ON_LINE\n      : null;\n    const measurementTools = getMeasurementTools();\n\n    measurementTools.forEach((tool) => {\n      tool.setSnapMode?.(mode);\n    });\n\n    dispatch(actions.setEnableSnapMode(enableSnapping));\n  };\n\n  return (\n    <>\n      {showMeasurementSnappingOption && (\n        <div className=\"snapping-option\">\n          <Choice\n            dataElement=\"measurementSnappingOption\"\n            id=\"measurement-snapping\"\n            type=\"checkbox\"\n            label={i18next.t('option.shared.enableSnapping')}\n            checked={isSnapModeEnabled}\n            onChange={onSnappingChange}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SnapModeToggle;","import core from 'core';\n\nconst Tools = window.Core.Tools;\n\nexport const shouldHideStylePanelOptions = (toolName) => {\n  const toolsNoStylePanelOptions = [\n    Tools.CheckBoxFormFieldCreateTool,\n    Tools.RadioButtonFormFieldCreateTool,\n    Tools.AddParagraphTool,\n    Tools.AddImageContentTool,\n    Tools.CropCreateTool,\n    Tools.SnippingCreateTool,\n    Tools.SignatureFormFieldCreateTool,\n  ];\n\n  return toolsNoStylePanelOptions.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const hasFillColorAndCollapsablePanelSections = (toolName) => {\n  const toolsWithCollapsedStylePanels = [\n    Tools.RectangleCreateTool,\n    Tools.EllipseCreateTool,\n    Tools.PolygonCreateTool,\n    Tools.PolygonCloudCreateTool,\n    Tools.EllipseMeasurementCreateTool,\n    Tools.AreaMeasurementCreateTool,\n    Tools.FreeTextCreateTool,\n    Tools.CalloutCreateTool,\n    Tools.RedactionCreateTool,\n  ];\n\n  return toolsWithCollapsedStylePanels.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideFillColorAndCollapsablePanelSections = (toolName) => {\n  const toolsWithHiddenFillColorSections = [\n    Tools.SignatureFormFieldCreateTool,\n    Tools.RubberStampCreateTool,\n    Tools.StampCreateTool,\n    Tools.EraserTool,\n  ];\n  return toolsWithHiddenFillColorSections.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideStrokeSlider = (toolName) => {\n  const toolsWithHiddenStrokeSlider = [\n    Tools.TextUnderlineCreateTool,\n    Tools.TextHighlightCreateTool,\n    Tools.TextSquigglyCreateTool,\n    Tools.TextStrikeoutCreateTool,\n    Tools.CountMeasurementCreateTool,\n    Tools.RubberStampCreateTool,\n    Tools.FileAttachmentCreateTool,\n    Tools.StampCreateTool,\n    Tools.StickyCreateTool,\n    Tools.MarkInsertTextCreateTool,\n    Tools.MarkReplaceTextCreateTool,\n  ];\n  return toolsWithHiddenStrokeSlider.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideStrokeStyle = (toolName) => {\n  const toolsWithHiddenStrokeStyle = [\n    Tools.RubberStampCreateTool,\n    Tools.StampCreateTool,\n    Tools.EraserTool,\n  ];\n  return toolsWithHiddenStrokeStyle.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldShowTextStyle = (toolName) => {\n  const toolsWithHiddenStrokeSlider = [\n    Tools.FreeTextCreateTool,\n    Tools.CalloutCreateTool,\n    Tools.RedactionCreateTool,\n    Tools.TextFormFieldCreateTool,\n    Tools.ListBoxFormFieldCreateTool,\n    Tools.ComboBoxFormFieldCreateTool,\n  ];\n  return toolsWithHiddenStrokeSlider.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideOpacitySlider = (toolName) => {\n  const toolsWithHiddenOpacitySlider = [\n    Tools.RedactionCreateTool,\n    Tools.EraserTool,\n    Tools.TextFormFieldCreateTool,\n    Tools.ListBoxFormFieldCreateTool,\n    Tools.ComboBoxFormFieldCreateTool,\n    Tools.SignatureFormFieldCreateTool,\n  ];\n  return toolsWithHiddenOpacitySlider.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const hasSnapModeCheckbox = (toolName) => {\n  const toolsWithSnapModeCheckbox = [\n    Tools.DistanceMeasurementCreateTool,\n    Tools.ArcMeasurementCreateTool,\n    Tools.PerimeterMeasurementCreateTool,\n    Tools.AreaMeasurementCreateTool,\n    Tools.RectangularAreaMeasurementCreateTool,\n    Tools.CloudyRectangularAreaMeasurementCreateTool,\n  ];\n  return toolsWithSnapModeCheckbox.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const extractUniqueFontFamilies = (jsonData, inputText) => {\n  const uniqueFontFamilies = new Set();\n  const uniqueFontSizes = new Set();\n\n  for (const key in jsonData) {\n    if (jsonData.hasOwnProperty(key)) {\n      const index = parseInt(key, 10);\n      if (!isNaN(index) && inputText[index] !== ' ' && jsonData[key]['font-family']) {\n        uniqueFontFamilies.add(jsonData[key]['font-family'].trim());\n      }\n      if (!isNaN(index) && inputText[index] !== ' ' && jsonData[key]['font-size']) {\n        uniqueFontSizes.add(jsonData[key]['font-size'].trim());\n      }\n    }\n  }\n\n  return {\n    fonts: Array.from(uniqueFontFamilies),\n    sizes: Array.from(uniqueFontSizes),\n  };\n};\n\nexport const shouldHideTransparentFillColor = (toolName) => {\n  const toolsWithHiddenTransparentColor = [Tools.RedactionCreateTool];\n  return toolsWithHiddenTransparentColor.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const stylePanelSectionTitles = (toolName, section) => {\n  const toolTitles = {\n    'AnnotationCreateRedaction': {\n      'Title': 'component.redaction',\n      'StrokeColor': 'stylePanel.headings.redactionMarkOutline',\n      'FillColor': 'stylePanel.headings.redactionFill',\n    },\n  };\n  return toolTitles[toolName] && toolTitles[toolName][section];\n};\n\nexport const shouldHideTextStylePicker = (toolName) => {\n  const { ToolNames } = window.Core.Tools;\n  const toolsWithHiddenTextStylePicker = [\n    ToolNames.TEXT_FORM_FIELD,\n    ToolNames.LIST_BOX_FIELD,\n    ToolNames.COMBO_BOX_FIELD,\n  ];\n  return toolsWithHiddenTextStylePicker.includes(toolName);\n};\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './StylePicker.scss';\nimport ColorPicker from './ColorPicker';\nimport Slider from 'components/Slider';\nimport DataElements from 'constants/dataElement';\nimport { circleRadius } from 'constants/slider';\nimport Dropdown from '../Dropdown';\nimport {\n  defaultStartLineStyles,\n  defaultStrokeStyles,\n  defaultEndLineStyles,\n  cloudyStrokeStyle\n} from 'constants/strokeStyleIcons';\nimport Icon from 'components/Icon';\nimport SnapModeToggle from './SnapModeToggle';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport {\n  hasFillColorAndCollapsablePanelSections,\n  stylePanelSectionTitles,\n  shouldHideStrokeSlider,\n  shouldHideOpacitySlider,\n  hasSnapModeCheckbox,\n  shouldShowTextStyle,\n  shouldHideTransparentFillColor,\n  shouldHideStrokeStyle,\n  shouldHideFillColorAndCollapsablePanelSections,\n} from 'helpers/stylePanelHelper';\nimport useOnFreeTextEdit from 'hooks/useOnFreeTextEdit';\nimport RichTextStyleEditor from '../RichTextStyleEditor';\nimport LabelTextEditor from 'components/LabelTextEditor';\n\nconst withCloudyStyle = defaultStrokeStyles.concat(cloudyStrokeStyle);\n\nconst propTypes = {\n  onStyleChange: PropTypes.func.isRequired,\n  style: PropTypes.object.isRequired,\n  sliderProperties: PropTypes.arrayOf(PropTypes.string),\n  isFreeText: PropTypes.bool,\n  isEllipse: PropTypes.bool,\n  isRedaction: PropTypes.bool,\n  isTextStylePickerHidden: PropTypes.bool,\n  redactionLabelProperties: PropTypes.object,\n  isFreeHand: PropTypes.bool,\n  showLineStyleOptions: PropTypes.bool,\n  isArc: PropTypes.bool,\n  isStamp: PropTypes.bool,\n  isInFormFieldCreationMode: PropTypes.bool,\n  startLineStyle: PropTypes.string,\n  endLineStyle: PropTypes.string,\n  strokeStyle: PropTypes.string,\n  onLineStyleChange: PropTypes.func,\n  toolName: PropTypes.string,\n  onFreeTextSizeToggle: PropTypes.func,\n  isFreeTextAutoSize: PropTypes.bool,\n  handleRichTextStyleChange: PropTypes.func,\n  activeType: PropTypes.string,\n};\n\nconst MAX_STROKE_THICKNESS = 20;\n\nconst StylePicker = ({\n  onStyleChange,\n  style,\n  isFreeText,\n  isEllipse,\n  isRedaction,\n  isTextStylePickerHidden,\n  isFreeHand,\n  showLineStyleOptions,\n  isArc,\n  isStamp,\n  isInFormFieldCreationMode,\n  startLineStyle,\n  endLineStyle,\n  strokeStyle,\n  onLineStyleChange,\n  onFreeTextSizeToggle,\n  isFreeTextAutoSize,\n  handleRichTextStyleChange,\n  activeTool,\n  saveEditorInstance,\n}) => {\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n  const [isRichTextEditMode, setIsRichTextEditMode] = useState(false);\n  const [strokeColor, setStrokeColor] = useState(style.StrokeColor);\n  const [startingLineStyle, setStartingLineStyle] = useState(startLineStyle);\n  const [endingLineStyle, setEndingLineStyle] = useState(endLineStyle);\n  const [strokeLineStyle, setStrokeLineStyle] = useState(strokeStyle);\n  const [fillColor, setFillColor] = useState(style.FillColor);\n\n  const hideStrokeStyle = shouldHideStrokeStyle(activeTool);\n  const showFillColorAndCollapsablePanelSections = hasFillColorAndCollapsablePanelSections(activeTool);\n  const hideFillColorAndCollapsablePanelSections = shouldHideFillColorAndCollapsablePanelSections(activeTool);\n  const hideStrokeSlider = shouldHideStrokeSlider(activeTool);\n  const showSnapModeCheckbox = hasSnapModeCheckbox(activeTool);\n  const showTextStyle = shouldShowTextStyle(activeTool);\n\n  useEffect(() => {\n    if (showFillColorAndCollapsablePanelSections) {\n      if (showTextStyle) {\n        dispatch(actions.openElement(DataElements.RICH_TEXT_STYLE_CONTAINER));\n      } else {\n        dispatch(actions.openElement(DataElements.STROKE_STYLE_CONTAINER));\n      }\n    }\n  }, [activeTool]);\n\n  useEffect(() => {\n    if (isRichTextEditMode) {\n      dispatch(actions.closeElement(DataElements.ANNOTATION_POPUP));\n    }\n  }, [isRichTextEditMode]);\n\n  useEffect(() => {\n    setStrokeColor(style.StrokeColor);\n    setFillColor(style.FillColor);\n  }, [strokeColor, fillColor, style]);\n\n  useEffect(() => {\n    setStrokeColor(style.StrokeColor);\n    setStartingLineStyle(startLineStyle);\n    setStrokeLineStyle(strokeStyle);\n    setEndingLineStyle(endLineStyle);\n  }, [startLineStyle, endLineStyle, strokeStyle]);\n\n  const onStrokeColorChange = (color) => {\n    onStyleChange?.('StrokeColor', color);\n    setStrokeColor(color);\n  };\n\n  const onStartLineStyleChange = (style) => {\n    onLineStyleChange?.('start', style);\n    setStartingLineStyle(style);\n  };\n\n  const onStrokeStyleChange = (style, value) => {\n    if (value) {\n      onLineStyleChange?.(style, value);\n      setStrokeLineStyle(value);\n    } else {\n      onLineStyleChange?.('middle', style);\n      setStrokeLineStyle(style);\n    }\n  };\n\n  const onEndLineStyleChange = (style) => {\n    onLineStyleChange?.('end', style);\n    setEndingLineStyle(style);\n  };\n\n  const onFillColorChange = (color) => {\n    onStyleChange?.('FillColor', color);\n    setFillColor(color);\n  };\n\n  const onSliderChange = (property, value) => {\n    onStyleChange?.(property, value);\n  };\n\n  // We do not have sliders to show up for redaction annots\n  if (isRedaction) {\n    style.Opacity = null;\n    style.StrokeThickness = null;\n  }\n\n  const [\n    isSnapModeEnabled,\n    isStyleOptionDisabled,\n    isStrokeStyleContainerActive,\n    isFillColorContainerActive,\n    isOpacityContainerActive,\n    isTextStyleContainerActive,\n  ] = useSelector((state) => [\n    selectors.isSnapModeEnabled(state),\n    selectors.isElementDisabled(state, DataElements.STYLE_OPTION),\n    selectors.isElementOpen(state, DataElements.STROKE_STYLE_CONTAINER),\n    selectors.isElementOpen(state, DataElements.FILL_COLOR_CONTAINER),\n    selectors.isElementOpen(state, DataElements.OPACITY_CONTAINER),\n    selectors.isElementOpen(state, DataElements.RICH_TEXT_STYLE_CONTAINER),\n  ]);\n\n  const panelItems = {\n    [DataElements.STROKE_STYLE_CONTAINER]: isStrokeStyleContainerActive,\n    [DataElements.FILL_COLOR_CONTAINER]: isFillColorContainerActive,\n    [DataElements.OPACITY_CONTAINER]: isOpacityContainerActive,\n    [DataElements.RICH_TEXT_STYLE_CONTAINER]: isTextStyleContainerActive,\n  };\n\n  const togglePanelItem = (dataElement) => {\n    if (!panelItems[dataElement]) {\n      dispatch(actions.openElement(dataElement));\n    } else {\n      dispatch(actions.closeElement(dataElement));\n    }\n  };\n  const openTextStyleContainer = () => {\n    dispatch(actions.openElements(DataElements.RICH_TEXT_EDITOR));\n    togglePanelItem(DataElements.RICH_TEXT_STYLE_CONTAINER);\n  };\n  const openStrokeStyleContainer = () => togglePanelItem(DataElements.STROKE_STYLE_CONTAINER);\n  const openFillColorContainer = () => togglePanelItem(DataElements.FILL_COLOR_CONTAINER);\n  const openOpacityContainer = () => togglePanelItem(DataElements.OPACITY_CONTAINER);\n\n  const getSliderProps = (type) => {\n    const { Opacity, StrokeThickness, FontSize } = style;\n\n    const lineStart = circleRadius;\n    switch (type.toLowerCase()) {\n      case 'opacity':\n        if (Opacity === null) {\n          return null;\n        }\n        return {\n          property: 'Opacity',\n          displayProperty: 'opacity',\n          value: Opacity,\n          getDisplayValue: (Opacity) => `${Math.round(Opacity * 100)}%`,\n          dataElement: DataElements.OPACITY_SLIDER,\n          getCirclePosition: (lineLength, Opacity) => Opacity * lineLength + lineStart,\n          convertRelativeCirclePositionToValue: (circlePosition) => circlePosition,\n          withInputField: true,\n          inputFieldType: 'number',\n          min: 0,\n          max: 100,\n          step: 1,\n          getLocalValue: (opacity) => parseInt(opacity) / 100,\n        };\n      case 'strokethickness':\n        if (StrokeThickness === null) {\n          return null;\n        }\n        return {\n          property: 'StrokeThickness',\n          displayProperty: 'thickness',\n          value: StrokeThickness,\n          getDisplayValue: (strokeThickness) => {\n            const placeOfDecimal =\n              Math.floor(strokeThickness) !== strokeThickness\n                ? strokeThickness?.toString().split('.')[1].length || 0\n                : 0;\n            if (StrokeThickness === 0 || (StrokeThickness >= 1 && (placeOfDecimal > 2 || placeOfDecimal === 0))) {\n              return `${Math.round(strokeThickness)}pt`;\n            }\n            return `${parseFloat(strokeThickness).toFixed(2)}pt`;\n          },\n          dataElement: DataElements.STROKE_THICKNESS_SLIDER,\n          getCirclePosition: (lineLength, strokeThickness) => (strokeThickness / MAX_STROKE_THICKNESS) * lineLength + lineStart,\n          convertRelativeCirclePositionToValue: (circlePosition) => {\n            if (circlePosition >= 1 / MAX_STROKE_THICKNESS) {\n              return Math.round(circlePosition * MAX_STROKE_THICKNESS);\n            }\n            if (circlePosition >= 0.75 / MAX_STROKE_THICKNESS && circlePosition < 1 / MAX_STROKE_THICKNESS) {\n              return 0.75;\n            }\n            if (circlePosition >= 0.5 / MAX_STROKE_THICKNESS && circlePosition < 0.75 / MAX_STROKE_THICKNESS) {\n              return 0.5;\n            }\n            if (circlePosition >= 0.25 / MAX_STROKE_THICKNESS && circlePosition < 0.5 / MAX_STROKE_THICKNESS) {\n              return 0.25;\n            }\n            if (circlePosition >= 0.08 / MAX_STROKE_THICKNESS && circlePosition < 0.25 / MAX_STROKE_THICKNESS) {\n              return 0.1;\n            }\n            return isFreeText ? 0 : 0.1;\n          },\n          withInputField: true,\n          inputFieldType: 'number',\n          min: isFreeText ? 0 : 0.1,\n          max: MAX_STROKE_THICKNESS,\n          step: 1,\n          getLocalValue: (strokeThickness) => parseFloat(strokeThickness).toFixed(2),\n        };\n      case 'fontsize':\n        if (FontSize === null) {\n          return null;\n        }\n        return {\n          property: 'FontSize',\n          displayProperty: 'text',\n          value: FontSize,\n          getDisplayValue: (FontSize) => `${Math.round(parseInt(FontSize, 10))}pt`,\n          dataElement: DataElements.FONT_SIZE_SLIDER,\n          getCirclePosition: (lineLength, FontSize) => ((parseInt(FontSize, 10) - 5) / 40) * lineLength + lineStart,\n          convertRelativeCirclePositionToValue: (circlePosition) => `${circlePosition * 40 + 5}pt`,\n          min: 5,\n          max: 45,\n          step: 1,\n          withInputField: true,\n          inputFieldType: 'number',\n          getLocalValue: (FontSize) => `${parseFloat(FontSize).toFixed(2)}pt`,\n        };\n    }\n  };\n\n  const renderSlider = (property, shouldHideSliderTitle) => {\n    const sliderProps = getSliderProps(property);\n    if (!sliderProps) {\n      return null;\n    }\n    return (\n      <Slider\n        key={property}\n        {...sliderProps}\n        onStyleChange={onSliderChange}\n        onSliderChange={onSliderChange}\n        shouldHideSliderTitle={shouldHideSliderTitle}\n      />\n    );\n  };\n\n  const renderDivider = () => {\n    if (showFillColorAndCollapsablePanelSections) {\n      return <div className=\"divider\" />;\n    }\n  };\n\n  const onOpenProps = useOnFreeTextEdit(saveEditorInstance);\n  const textSizeSlider = (isTextStylePickerHidden) ? <div className=\"StyleOption text-size-slider\">{renderSlider('fontsize')}</div> : null;\n  const strokethicknessComponent = renderSlider('strokethickness');\n\n  return (\n    <div\n      className=\"StylePicker\"\n      onMouseDown={(e) => {\n        if (e.type !== 'touchstart' && e.target.tagName.toUpperCase() !== 'INPUT') {\n          e.preventDefault();\n        }\n      }}\n    >\n      {showTextStyle && (\n        <div className=\"PanelSection TextStyle\">\n          <div\n            className=\"collapsible-menu\"\n            onClick={openTextStyleContainer}\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && openTextStyleContainer()}\n            role={'toolbar'}\n          >\n            <div\n              className=\"menu-title\">{t(stylePanelSectionTitles(activeTool, 'OverlayText') || 'option.stylePopup.textStyle')}</div>\n            <div className=\"icon-container\">\n              <Icon glyph={`icon-chevron-${isTextStyleContainerActive ? 'up' : 'down'}`} />\n            </div>\n          </div>\n          {isTextStyleContainerActive && isRedaction && (\n            <div className=\"PanelSubsection RedactionTextLabel\">\n              <div className=\"menu-subtitle\">{t('stylePanel.headings.redactionTextLabel')}</div>\n              <LabelTextEditor properties={style} onPropertyChange={onStyleChange} placeholderText={t('stylePanel.headings.redactionTextPlaceholder')} />\n            </div>\n          )}\n          {isTextStyleContainerActive && (\n            <RichTextStyleEditor\n              style={style}\n              {...onOpenProps}\n              property={'TextColor'}\n              colorMapKey={'freeText'}\n              isFreeTextAutoSize={isFreeTextAutoSize}\n              onFreeTextSizeToggle={onFreeTextSizeToggle}\n              onPropertyChange={onStyleChange}\n              onRichTextStyleChange={handleRichTextStyleChange}\n              isRichTextEditMode={isRichTextEditMode}\n              setIsRichTextEditMode={setIsRichTextEditMode}\n              isRedaction={isRedaction}\n              activeTool={activeTool}\n              isTextStylePickerHidden={isTextStylePickerHidden}\n              textSizeSliderComponent={textSizeSlider}\n            />\n          )}\n          {renderDivider()}\n        </div>\n      )}\n\n      {!hideStrokeStyle && (\n        <div className=\"PanelSection\">\n          {showFillColorAndCollapsablePanelSections && (\n            <div\n              className=\"collapsible-menu StrokeColorPicker\"\n              onClick={openStrokeStyleContainer}\n              tabIndex={0}\n              onKeyDown={(e) => e.key === 'Enter' && openStrokeStyleContainer()}\n              role={'toolbar'}\n            >\n              <div className=\"menu-title\">\n                {t(stylePanelSectionTitles(activeTool, 'StrokeColor') || 'option.annotationColor.StrokeColor')}\n              </div>\n              <div className=\"icon-container\">\n                <Icon glyph={`icon-chevron-${isStrokeStyleContainerActive ? 'up' : 'down'}`} />\n              </div>\n            </div>\n          )}\n          {(isStrokeStyleContainerActive || !showFillColorAndCollapsablePanelSections) && !isStamp && (\n            <>\n              <div className=\"menu-items\">\n                <ColorPicker onColorChange={onStrokeColorChange} onStyleChange={onStyleChange} color={strokeColor}\n                  activeTool={activeTool} type={'Stroke'}/>\n              </div>\n              {!hideStrokeSlider && strokethicknessComponent && (strokethicknessComponent)}\n              {/*\n                When showLineStyleOptions is true, we want to show the opacity slider together with the stroke slider\n              */}\n              {showLineStyleOptions && <div className=\"StyleOption\">{renderSlider('opacity')}</div>}\n              {!!strokeStyle && !(isInFormFieldCreationMode && !isFreeText) && !isFreeHand && !isArc && (\n                <div className=\"StyleOption\">\n                  <div className=\"styles-container lineStyleContainer\">\n                    <div className=\"styles-title\">Style</div>\n                    <div className=\"StylePicker-LineStyle\">\n                      {showLineStyleOptions && (\n                        <Dropdown\n                          className=\"StylePicker-StartLineStyleDropdown\"\n                          dataElement=\"startLineStyleDropdown\"\n                          images={defaultStartLineStyles}\n                          onClickItem={onStartLineStyleChange}\n                          currentSelectionKey={startingLineStyle}\n                        />\n                      )}\n                      {!isStyleOptionDisabled && (\n                        <Dropdown\n                          className={`StylePicker-StrokeLineStyleDropdown${\n                            !!strokeStyle && !showLineStyleOptions ? ' StyleOptions' : ''\n                          }`}\n                          dataElement=\"middleLineStyleDropdown\"\n                          images={isEllipse || showLineStyleOptions ? defaultStrokeStyles : withCloudyStyle}\n                          onClickItem={onStrokeStyleChange}\n                          currentSelectionKey={strokeLineStyle}\n                        />\n                      )}\n                      {showLineStyleOptions && (\n                        <Dropdown\n                          className=\"StylePicker-EndLineStyleDropdown\"\n                          dataElement=\"endLineStyleDropdown\"\n                          images={defaultEndLineStyles}\n                          onClickItem={onEndLineStyleChange}\n                          currentSelectionKey={endingLineStyle}\n                        />\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n          {renderDivider()}\n        </div>\n      )}\n      {hideStrokeStyle && !hideStrokeSlider && strokethicknessComponent && (strokethicknessComponent)}\n      {showFillColorAndCollapsablePanelSections && !hideFillColorAndCollapsablePanelSections && (\n        <div className=\"PanelSection\">\n          <div\n            className=\"collapsible-menu FillColorPicker\"\n            onClick={openFillColorContainer}\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && openFillColorContainer()}\n            role={'toolbar'}\n          >\n            <div className=\"menu-title\">\n              {t(stylePanelSectionTitles(activeTool, 'FillColor') || 'option.annotationColor.FillColor')}\n            </div>\n            <div className=\"icon-container\">\n              <Icon glyph={`icon-chevron-${isFillColorContainerActive ? 'up' : 'down'}`} />\n            </div>\n          </div>\n          {isFillColorContainerActive && (\n            <div className=\"menu-items\">\n              <ColorPicker\n                onColorChange={onFillColorChange}\n                onStyleChange={onStyleChange}\n                color={fillColor}\n                hasTransparentColor={!shouldHideTransparentFillColor(activeTool)}\n                activeTool={activeTool}\n                type={'Fill'}\n              />\n            </div>\n          )}\n          {!shouldHideOpacitySlider(activeTool) && renderDivider()}\n        </div>\n      )}\n\n      <div className=\"PanelSection\">\n        {showFillColorAndCollapsablePanelSections && !shouldHideOpacitySlider(activeTool) && (\n          <div\n            className=\"collapsible-menu StrokeColorPicker\"\n            onClick={openOpacityContainer}\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && openOpacityContainer()}\n            role={'toolbar'}\n          >\n            <div className=\"menu-title\">{t('option.slider.opacity')}</div>\n            <div className=\"icon-container\">\n              <Icon glyph={`icon-chevron-${isOpacityContainerActive ? 'up' : 'down'}`} />\n            </div>\n          </div>\n        )}\n        {/*\n          If showLineStyleOptions is true, then we don't want to show the opacity slider\n          in the bottom because it is already shown before together with the stroke slider\n        */}\n        {!showLineStyleOptions && !shouldHideOpacitySlider(activeTool) && (isOpacityContainerActive || !showFillColorAndCollapsablePanelSections) && (\n          <div className=\"StyleOption\">{renderSlider('opacity', showFillColorAndCollapsablePanelSections)}</div>\n        )}\n        {showSnapModeCheckbox && renderDivider()}\n      </div>\n      {showSnapModeCheckbox && (\n        <>\n          {/* to avoid inline styling when there's no divider */}\n          {!showFillColorAndCollapsablePanelSections && <div className=\"spacer\" />}\n          <div className=\"PanelSection\">\n            <SnapModeToggle Scale={style.Scale} Precision={style.Precision} isSnapModeEnabled={isSnapModeEnabled} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nStylePicker.propTypes = propTypes;\n\nexport default StylePicker;","import StylePicker from './StylePicker';\n\nexport default StylePicker;","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport selectors from 'selectors';\nimport Icon from 'components/Icon';\nimport StylePicker from 'components/StylePicker';\nimport getAnnotationCreateToolNames from 'helpers/getAnnotationCreateToolNames';\nimport { hexToRGBA } from 'helpers/color';\nimport getToolStyles from 'helpers/getToolStyles';\nimport setToolStyles from 'helpers/setToolStyles';\nimport core from 'core';\nimport { getDataWithKey, mapToolNameToKey } from 'constants/map';\nimport handleFreeTextAutoSizeToggle from 'helpers/handleFreeTextAutoSizeToggle';\nimport getTextDecoration from 'helpers/getTextDecoration';\nimport {\n  shouldHideStylePanelOptions,\n  extractUniqueFontFamilies,\n  stylePanelSectionTitles,\n  shouldHideTextStylePicker\n} from 'helpers/stylePanelHelper';\nimport defaultTool from 'constants/defaultTool';\n\nconst { ToolNames } = window.Core.Tools;\nconst { Annotations } = window.Core;\n\n\nconst StylePanel = () => {\n  const [t] = useTranslation();\n\n  const [\n    isPanelOpen,\n    toolButtonObject,\n    isAnnotationToolStyleSyncingEnabled,\n    activeDocumentViewerKey,\n  ] = useSelector((state) => [\n    selectors.isElementOpen(state, 'stylePanel'),\n    selectors.getToolButtonObjects(state),\n    selectors.isAnnotationToolStyleSyncingEnabled(state),\n    selectors.getActiveDocumentViewerKey(state),\n  ]);\n\n\n  const currentTool = core.getToolMode();\n  const currentToolName = currentTool?.name;\n  const colorProperties = ['StrokeColor', 'FillColor'];\n  const [showStyles, setShowStyles] = useState(false);\n  const [noToolStyle, setNoToolStyle] = useState(shouldHideStylePanelOptions(currentToolName));\n  const [isEllipse, setIsEllipse] = useState(false);\n  const [isFreeText, setIsFreeText] = useState(false);\n  const [isRedaction, setIsRedaction] = useState(currentToolName === ToolNames.REDACTION);\n  const [isTextStylePickerHidden, setIsTextStylePickerHidden] = useState(currentToolName === defaultTool ? false : shouldHideTextStylePicker(currentToolName));\n  const [isFreeHand, setIsFreeHand] = useState(false);\n  const [isArc, setIsArc] = useState(false);\n  const [isStamp, setIsStamp] = useState(false);\n  const [isInFormFieldCreationMode, setIsInFormFieldCreationMode] = useState(false);\n  const [style, setStyle] = useState({});\n  const [startLineStyle, setStartLineStyle] = useState();\n  const [endLineStyle, setEndLineStyle] = useState();\n  const [strokeStyle, setStrokeStyle] = useState();\n  const [panelTitle, setPanelTitle] = useState(t('stylePanel.headings.styles'));\n  const annotationCreateToolNames = getAnnotationCreateToolNames();\n  const [showLineStyleOptions, setShowLineStyleOptions] = useState(currentToolName === defaultTool ? false : getDataWithKey(mapToolNameToKey(currentToolName)).hasLineEndings);\n  const [isAutoSizeFont, setIsAutoSizeFont] = useState(style.isAutoSizeFont);\n  const [activeTool, setActiveTool] = useState(currentToolName || 'Edit');\n  const [editorInstance, setEditorInstance] = useState(null);\n\n\n  useEffect(() => {\n    if (currentTool?.name === 'AnnotationCreateRubberStamp') {\n      core.setToolMode(defaultTool);\n    }\n  }, [currentTool]);\n\n  const getStrokeStyle = (annot) => {\n    const style = annot['Style'];\n    const dashes = annot['Dashes'];\n    if (style !== 'dash') {\n      return style;\n    }\n    return `${style},${dashes}`;\n  };\n\n  const getPanelTitleOnAnnotationSelected = (annot) => {\n    if (annot.isContentEditPlaceholder()) {\n      setPanelTitle(`${t('stylePanel.headings.contentEdit')} ${t('stylePanel.headings.annotation')}`);\n      setNoToolStyle(true);\n      return;\n    }\n    setPanelTitle(`${t(stylePanelSectionTitles(annot.ToolName, 'Title') || toolButtonObject[annot.ToolName].title)} ${t('stylePanel.headings.annotation')}`);\n  };\n\n  const setPanelTitleForSelectedTool = (tool) => {\n    const toolName = tool.name;\n    const title = toolButtonObject[toolName].title;\n    setPanelTitle(`${t(stylePanelSectionTitles(toolName, 'Title') || title)} ${t('stylePanel.headings.tool')}`);\n  };\n\n  const updateStylePanelProps = (annot) => {\n    const extraStyles = {};\n\n    if (annot instanceof Annotations.FreeTextAnnotation) {\n      let StrokeStyle = 'solid';\n      try {\n        StrokeStyle = (annot['Style'] === 'dash')\n          ? `${annot['Style']},${annot['Dashes']}`\n          : annot['Style'];\n      } catch (err) {\n        console.error(err);\n      }\n      extraStyles['TextColor'] = annot.TextColor;\n      extraStyles['RichTextStyle'] = annot.getRichTextStyle();\n      extraStyles['Font'] = annot.Font;\n      extraStyles['FontSize'] = annot.FontSize;\n      extraStyles['TextAlign'] = annot.TextAlign;\n      extraStyles['TextVerticalAlign'] = annot.TextVerticalAlign;\n      extraStyles['calculatedFontSize'] = annot.getCalculatedFontSize();\n      extraStyles['StrokeStyle'] = StrokeStyle;\n      extraStyles['isAutoSizeFont'] = annot.isAutoSizeFont();\n      setIsAutoSizeFont(annot.isAutoSizeFont());\n\n      const { fonts, sizes } = extractUniqueFontFamilies(extraStyles['RichTextStyle'], annot.getContents());\n      if (fonts.length >= 2 || (fonts.length === 1 && fonts[0] !== extraStyles['Font'])) {\n        extraStyles['Font'] = undefined;\n      }\n      if (sizes.length >= 2 || (sizes.length === 1 && sizes[0] !== extraStyles['FontSize'])) {\n        extraStyles['FontSize'] = undefined;\n      }\n    }\n\n    if (annot instanceof Annotations.RedactionAnnotation) {\n      extraStyles['OverlayText'] = annot.OverlayText;\n      extraStyles['Font'] = annot.Font;\n      extraStyles['FontSize'] = annot.FontSize;\n      extraStyles['TextAlign'] = annot.TextAlign;\n    }\n\n    if (annot instanceof Annotations.RectangleAnnotation && annot.isFormFieldPlaceholder() && annot.FontSize !== undefined) {\n      extraStyles.FontSize = annot.FontSize;\n    }\n\n    setStyle({\n      ...style,\n      StrokeColor: annot.StrokeColor,\n      StrokeThickness: annot.StrokeThickness,\n      Opacity: annot.Opacity,\n      FillColor: annot.FillColor,\n      ...extraStyles,\n    });\n    setStartLineStyle(annot.getStartStyle ? annot.getStartStyle() : 'None');\n    setEndLineStyle(annot.getEndStyle ? annot.getEndStyle() : 'None');\n    setStrokeStyle(getStrokeStyle(annot));\n  };\n\n  useEffect(() => {\n    const handleToolModeChange = (newTool) => {\n      if (annotationCreateToolNames.includes(newTool?.name)) {\n        if (!panelTitle) {\n          setShowStyles(false);\n        } else {\n          if (shouldHideStylePanelOptions(newTool?.name)) {\n            setNoToolStyle(true);\n            setShowStyles(true);\n            setPanelTitleForSelectedTool(newTool);\n            return;\n          }\n\n          setNoToolStyle(false);\n          setActiveTool(newTool.name);\n          setShowLineStyleOptions(getDataWithKey(mapToolNameToKey(newTool.name)).hasLineEndings);\n          setIsEllipse(newTool.name === ToolNames.ELLIPSE);\n          setIsFreeText(newTool.name === ToolNames.FREETEXT);\n          setIsRedaction(newTool.name === ToolNames.REDACTION);\n\n          setIsTextStylePickerHidden(shouldHideTextStylePicker(newTool.name));\n\n          setIsFreeHand(\n            newTool.name === ToolNames.FREEHAND ||\n            newTool.name === ToolNames.FREEHAND_HIGHLIGHT,\n          );\n          setIsArc(newTool.name === ToolNames.ARC);\n          setIsStamp(newTool.name === ToolNames.STAMP);\n          setIsInFormFieldCreationMode(core.getFormFieldCreationManager().isInFormFieldCreationMode());\n          const toolStyles = getToolStyles(newTool.name);\n\n          if (newTool.name.includes('FreeText') || newTool.name.includes('Callout')) {\n            toolStyles['isAutoSizeFont'] = newTool['defaults']['isAutoSizeFont'];\n            setIsAutoSizeFont(newTool['defaults']['isAutoSizeFont']);\n          }\n\n          setStyle(toolStyles);\n          setStartLineStyle(toolStyles.StartLineStyle);\n          setStrokeStyle(toolStyles.StrokeStyle);\n          setEndLineStyle(toolStyles.EndLineStyle);\n          setShowStyles(true);\n          setPanelTitleForSelectedTool(newTool);\n        }\n      } else {\n        setShowStyles(false);\n      }\n    };\n    const onAnnotationSelected = (annotations, action) => {\n      if (action === 'selected') {\n        setShowStyles(true);\n        if (annotations.length === 1) {\n          getPanelTitleOnAnnotationSelected(annotations[0]);\n          if (shouldHideStylePanelOptions(annotations[0].ToolName)) {\n            setNoToolStyle(true);\n            return;\n          }\n          setNoToolStyle(false);\n          setActiveTool(annotations[0].ToolName);\n          setIsEllipse(annotations[0] instanceof Annotations.EllipseAnnotation);\n          setIsFreeText(annotations[0] instanceof Annotations.FreeTextAnnotation);\n          setIsRedaction(annotations[0] instanceof Annotations.RedactionAnnotation);\n          setIsTextStylePickerHidden(shouldHideTextStylePicker(annotations[0].ToolName));\n          setIsFreeHand(annotations[0] instanceof Annotations.FreeHandAnnotation);\n          setIsArc(annotations[0] instanceof Annotations.ArcAnnotation);\n          setIsStamp(annotations[0] instanceof Annotations.StampAnnotation);\n          setIsInFormFieldCreationMode(core.getFormFieldCreationManager().isInFormFieldCreationMode());\n          setShowLineStyleOptions(getDataWithKey(mapToolNameToKey(annotations[0].ToolName)).hasLineEndings);\n          updateStylePanelProps(annotations[0]);\n        } else {\n          setPanelTitle(`${t('stylePanel.headings.annotations')} (${annotations.length})`);\n          annotations.forEach((annot) => {\n            updateStylePanelProps(annot);\n          });\n        }\n      } else if (action === 'deselected') {\n        const currentTool = core.getToolMode();\n        if (currentTool instanceof window.Core.Tools.AnnotationEditTool) {\n          setShowStyles(false);\n        }\n        handleToolModeChange(currentTool);\n        // reset tool mode to change the tool name in the header\n        core.setToolMode(currentTool.name);\n      }\n    };\n\n    core.addEventListener('annotationSelected', onAnnotationSelected);\n    core.addEventListener('toolModeUpdated', handleToolModeChange);\n    return () => {\n      core.removeEventListener('annotationSelected', onAnnotationSelected);\n      core.removeEventListener('toolModeUpdated', handleToolModeChange);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isPanelOpen) {\n      const selectedAnnotations = core.getSelectedAnnotations();\n      if (selectedAnnotations.length === 1) {\n        setShowStyles(true);\n        const annot = selectedAnnotations[0];\n        updateStylePanelProps(annot);\n        getPanelTitleOnAnnotationSelected(annot);\n      } else if (selectedAnnotations.length > 1) {\n        setShowStyles(true);\n        setPanelTitle(`${t('stylePanel.headings.annotations')} (${selectedAnnotations.length})`);\n        selectedAnnotations.forEach((annot) => {\n          updateStylePanelProps(annot);\n        });\n      } else {\n        const currentTool = core.getToolMode();\n        if (currentTool && currentTool.name !== defaultTool) {\n          setShowStyles(true);\n          const toolStyles = getToolStyles(currentTool.name);\n          if (toolStyles) {\n            setStyle(toolStyles);\n            setStartLineStyle(toolStyles.StartLineStyle);\n            setEndLineStyle(toolStyles.EndLineStyle);\n            setStrokeStyle(toolStyles.StrokeStyle);\n          }\n          setPanelTitleForSelectedTool(currentTool);\n        }\n      }\n    }\n  }, [isPanelOpen, isAutoSizeFont]);\n\n\n  const onStyleChange = (property, value) => {\n    const newStyle = { ...style };\n    newStyle[property] = value;\n    setStyle(newStyle);\n    const annotationsToUpdate = core.getSelectedAnnotations();\n\n    // Newly created freetext is not saved in annotationManager yet, so getSelectedAnnotations\n    // will return empty array, but editor has focus and an annotation\n    if (annotationsToUpdate.length === 0 && editorInstance && property === 'FillColor') {\n      const editor = editorInstance[0];\n      if (editor?.hasFocus()) {\n        const annot = editorInstance[1];\n        editor.setStyle({ background: value });\n        annot['FillColor'] = new Annotations.Color(value);\n        return;\n      }\n    }\n\n    if (annotationsToUpdate.length > 0) {\n      annotationsToUpdate.forEach((annot) => {\n        if (colorProperties.includes(property)) {\n          const colorRGB = hexToRGBA(value);\n          const color = new Annotations.Color(colorRGB.r, colorRGB.g, colorRGB.b, colorRGB.a);\n          annot[property] = color;\n          if (isAnnotationToolStyleSyncingEnabled) {\n            setToolStyles(annot.ToolName, property, color);\n          }\n        } else {\n          annot[property] = value;\n          if (isAnnotationToolStyleSyncingEnabled) {\n            setToolStyles(annot.ToolName, property, value);\n          }\n        }\n\n        core.getAnnotationManager().redrawAnnotation(annot);\n      });\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        if (colorProperties.includes(property)) {\n          const colorRGB = hexToRGBA(value);\n          const color = new Annotations.Color(colorRGB.r, colorRGB.g, colorRGB.b, colorRGB.a);\n          setToolStyles(currentTool.name, property, color);\n        } else if (property === 'Opacity') {\n          setToolStyles(currentTool.name, 'Opacity', value);\n        } else if (property === 'StrokeThickness') {\n          setToolStyles(currentTool.name, 'StrokeThickness', value);\n        } else {\n          setToolStyles(currentTool.name, property, value);\n        }\n      }\n    }\n  };\n\n  const onLineStyleChange = (section, value) => {\n    const sectionPropertyMap = {\n      start: 'StartLineStyle',\n      middle: 'StrokeStyle',\n      end: 'EndLineStyle',\n    };\n    if (section === 'start') {\n      setStartLineStyle(value);\n    } else if (section === 'middle') {\n      setStrokeStyle(value);\n    } else if (section === 'end') {\n      setEndLineStyle(value);\n    }\n    const annotationsToUpdate = core.getSelectedAnnotations();\n    if (annotationsToUpdate.length > 0) {\n      annotationsToUpdate.forEach((annot) => {\n        if (section === 'start') {\n          annot.setStartStyle(value);\n        } else if (section === 'middle') {\n          const dashes = value.split(',');\n          const lineStyle = dashes.shift();\n          annot.Style = lineStyle;\n          annot.Dashes = dashes;\n        } else if (section === 'end') {\n          annot.setEndStyle(value);\n        }\n        core.getAnnotationManager().redrawAnnotation(annot);\n        if (isAnnotationToolStyleSyncingEnabled) {\n          setToolStyles(annot.ToolName, sectionPropertyMap[section], value);\n        }\n      });\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        setToolStyles(currentTool.name, sectionPropertyMap[section], value);\n      }\n    }\n  };\n  const handleAutoSize = () => {\n    const annotationsToUpdate = core.getSelectedAnnotations()[0];\n    if (annotationsToUpdate) {\n      handleFreeTextAutoSizeToggle(annotationsToUpdate, setIsAutoSizeFont, isAutoSizeFont);\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        setToolStyles(currentTool.name, 'isAutoSizeFont', !style.isAutoSizeFont);\n        setIsAutoSizeFont(!isAutoSizeFont);\n      }\n    }\n  };\n\n  const noToolSelected = (\n    <>\n      <div className='style-panel-header'>\n        {t('stylePanel.headings.styles')}\n      </div>\n      <div className=\"no-tool-selected\">\n        <div>\n          <Icon className=\"empty-icon\" glyph=\"style-panel-no-tool-selected\" />\n        </div>\n        <div className=\"msg\">{t('stylePanel.noToolSelected')}</div>\n      </div>\n    </>\n  );\n\n  const handleRichTextStyleChange = (property, value) => {\n    const originalProperty = property;\n    const originalValue = value;\n    const activeToolRichTextStyle = style['RichTextStyle']?.[0];\n    if (property === 'underline' || property === 'line-through') {\n      value = getTextDecoration({ [property]: value }, activeToolRichTextStyle);\n      property = 'text-decoration';\n    }\n    const richTextStyle = {\n      0: {\n        ...activeToolRichTextStyle,\n        [property]: value,\n      }\n    };\n\n    const annotationsToUpdate = core.getSelectedAnnotations();\n    if (annotationsToUpdate.length > 0) {\n      annotationsToUpdate.forEach((annotation) => {\n        core.updateAnnotationRichTextStyle(annotation, { [originalProperty]: originalValue }, activeDocumentViewerKey);\n      });\n      setStyle({ ...style, 'RichTextStyle': richTextStyle });\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        if (typeof currentTool.complete === 'function') {\n          currentTool.complete();\n        }\n        setToolStyles(currentTool.name, 'RichTextStyle', richTextStyle);\n      }\n    }\n  };\n\n  return !showStyles ? (\n    noToolSelected\n  ) : (\n    <>\n      <div className=\"style-panel-header\">{panelTitle}</div>\n      {noToolStyle ? (\n        <div className=\"no-tool-selected\">\n          <div>\n            <Icon className=\"empty-icon\" glyph=\"style-panel-no-tool-selected\" />\n          </div>\n          <div className=\"msg\">{t('stylePanel.noToolStyle')}</div>\n        </div>\n      ) : (\n        <StylePicker\n          sliderProperties={['Opacity', 'StrokeThickness']}\n          style={style}\n          onStyleChange={onStyleChange}\n          isFreeText={isFreeText}\n          isEllipse={isEllipse}\n          isRedaction={isRedaction}\n          isTextStylePickerHidden={isTextStylePickerHidden}\n          isFreeHand={isFreeHand}\n          isArc={isArc}\n          isStamp={isStamp}\n          isInFormFieldCreationMode={isInFormFieldCreationMode}\n          showLineStyleOptions={showLineStyleOptions}\n          startLineStyle={startLineStyle}\n          endLineStyle={endLineStyle}\n          strokeStyle={strokeStyle}\n          onLineStyleChange={onLineStyleChange}\n          onFreeTextSizeToggle={handleAutoSize}\n          isFreeTextAutoSize={isAutoSizeFont}\n          handleRichTextStyleChange={handleRichTextStyleChange}\n          activeTool={activeTool}\n          saveEditorInstance={setEditorInstance}\n        />\n      )}\n    </>\n  );\n};\n\nexport default StylePanel;","import React from 'react';\nimport StylePanel from './StylePanel';\nimport DataElementWrapper from '../DataElementWrapper';\nimport './StylePanel.scss';\n\nconst StylePanelContainer = () => {\n  return (\n    <DataElementWrapper dataElement=\"stylePanel\" className=\"Panel StylePanel\">\n      <StylePanel />\n    </DataElementWrapper>\n  );\n};\n\nexport default StylePanelContainer;","import StylePanelContainer from './StylePanelContainer';\n\nexport default StylePanelContainer;"],"sourceRoot":""}