{"version":3,"sources":["webpack:///./src/ui/src/components/CollapsiblePanelGroup/CollapsiblePanelGroup.js","webpack:///./src/ui/src/components/CollapsiblePanelGroup/index.js","webpack:///./src/ui/src/components/CollapsiblePanelGroup/CollapsiblePanelGroup.scss?0120","webpack:///./src/ui/src/components/CollapsiblePanelGroup/CollapsiblePanelGroup.scss","webpack:///./src/ui/src/components/RubberStampPanel/RubberStampPanel.scss?9f58","webpack:///./src/ui/src/components/RubberStampPanel/RubberStampPanel.scss","webpack:///./src/ui/src/components/RubberStampPanel/CreateRubberStampButton.js","webpack:///./src/ui/src/components/RubberStampPanel/StandardRubberStamps.js","webpack:///./src/ui/src/components/RubberStampPanel/CustomRubberStamps.js","webpack:///./src/ui/src/components/RubberStampPanel/RubberStampPanel.js","webpack:///./src/ui/src/components/RubberStampPanel/index.js"],"names":["CollapsiblePanelGroup","props","header","children","className","role","style","useState","isExpanded","setIsExpanded","t","useTranslation","Button","title","img","onClick","api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","CreateRubberStampButton","dispatch","useDispatch","DataElementWrapper","dataElement","DataElements","CREATE_RUBBER_STAMP_BUTTON","label","actions","openElement","CUSTOM_STAMP_MODAL","RubberStamp","React","memo","imgSrc","annotation","index","isActive","tabIndex","key","classNames","aria-label","src","alt","displayName","StandardRubberStamps","standardStamps","selectedStampIndex","setSelectedRubberStamp","rubberStamps","map","useCallback","CustomRubberStamp","deleteHandler","standardStampsOffset","data-element","Icon","glyph","CustomRubberStamps","customStamps","stampToolArray","core","getToolsFromAllDocumentViewers","deleteCustomStamp","tool","stamps","getCustomStamps","deleteCustomStamps","RubberStampPanel","useSelector","state","selectors","getStandardStamps","getSelectedStampIndex","shallowEqual","setToolMode","text","setRubberStamp","showPreview","setSelectedStampIndex","RUBBER_STAMP_PANEL","Divider"],"mappings":"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","file":"chunks/41.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Button from 'components/Button';\nimport { useTranslation } from 'react-i18next';\nimport './CollapsiblePanelGroup.scss';\n\nconst CollapsiblePanelGroup = (props) => {\n  const {\n    header,\n    children,\n    className,\n    role,\n    style,\n  } = props;\n\n  const [isExpanded, setIsExpanded] = useState(true);\n  const { t } = useTranslation();\n\n  return (\n    <div className={className} role={role} style={style}>\n      <div className=\"collapsible-page-group-header\">\n        {header()}\n        <Button\n          title={isExpanded ? t('redactionPanel.collapse') : t('redactionPanel.expand')}\n          img={isExpanded ? 'icon-chevron-up' : 'icon-chevron-down'}\n          className=\"expand-arrow\"\n          onClick={() => setIsExpanded(!isExpanded)}\n        />\n      </div>\n      {isExpanded && children}\n    </div>\n  );\n};\n\nexport default CollapsiblePanelGroup;","import CollapsiblePanelGroup from './CollapsiblePanelGroup';\n\nexport default CollapsiblePanelGroup;","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./CollapsiblePanelGroup.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".collapsible-page-group-header{display:flex;justify-content:space-between;align-items:baseline}\", \"\"]);\n\n// exports\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./RubberStampPanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.RubberStampPanel{height:100%;display:flex;flex-direction:column}.RubberStampPanel .rubber-stamp-panel-header{font-size:16px;font-weight:700}.RubberStampPanel .CreateRubberStampButton{width:100%;padding:8px;color:#2b73ab;border:1px solid #2b73ab;border-radius:4px;margin:16px 0}.RubberStampPanel .CreateRubberStampButton:hover{color:var(--primary-button-hover);border-color:var(--primary-button-hover)}.RubberStampPanel .rubber-stamps-container{overflow:auto;padding:0 4px}.RubberStampPanel .rubber-stamps-container .rubber-stamps-list-header{font-size:14px;font-weight:700;margin:16px 0}.RubberStampPanel .rubber-stamps-container .rubber-stamps-list{display:flex;flex-direction:column;grid-gap:4px;gap:4px;padding-bottom:16px}.RubberStampPanel .rubber-stamps-container .rubber-stamps-list .rubber-stamp{border:none;background-color:transparent;height:48px;padding:0 8px;border:1px solid var(--border);border-radius:4px;display:flex;align-items:center;justify-content:center;cursor:pointer;background-color:var(--gray-0);flex-grow:1}:host(:not([data-tabbing=true])) .RubberStampPanel .rubber-stamps-container .rubber-stamps-list .rubber-stamp,html:not([data-tabbing=true]) .RubberStampPanel .rubber-stamps-container .rubber-stamps-list .rubber-stamp{outline:none}.RubberStampPanel .rubber-stamps-container .rubber-stamps-list .rubber-stamp img{max-width:100%;max-height:100%}.RubberStampPanel .rubber-stamps-container .rubber-stamps-list .rubber-stamp:hover{background:var(--tools-overlay-button-hover)}.RubberStampPanel .rubber-stamps-container .rubber-stamps-list .rubber-stamp.active{background:var(--tools-overlay-button-active)}.RubberStampPanel .custom-rubber-stamp-row{display:flex;align-items:center;grid-gap:8px;gap:8px}.RubberStampPanel .custom-rubber-stamp-row .icon-button{padding:0;border:none;background-color:transparent;display:flex;align-items:center;justify-content:center;width:34px;height:34px;border-radius:4px;cursor:pointer}:host(:not([data-tabbing=true])) .RubberStampPanel .custom-rubber-stamp-row .icon-button,html:not([data-tabbing=true]) .RubberStampPanel .custom-rubber-stamp-row .icon-button{outline:none}.RubberStampPanel .custom-rubber-stamp-row .icon-button:hover{background:var(--tools-overlay-button-hover)}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React from 'react';\nimport Button from '../Button';\nimport { useDispatch } from 'react-redux';\nimport actions from 'actions';\nimport { useTranslation } from 'react-i18next';\nimport DataElementWrapper from '../DataElementWrapper';\nimport DataElements from 'constants/dataElement';\n\nconst CreateRubberStampButton = () => {\n  const dispatch = useDispatch();\n  const [t] = useTranslation();\n\n  const openRubberStampModal = () => {\n    dispatch(actions.openElement(DataElements.CUSTOM_STAMP_MODAL));\n  };\n\n  return (\n    <DataElementWrapper dataElement={DataElements.CREATE_RUBBER_STAMP_BUTTON}>\n      <Button\n        className={'CreateRubberStampButton'}\n        label={t('component.createStampButton')}\n        onClick={openRubberStampModal} />\n    </DataElementWrapper>\n  );\n};\n\nexport default CreateRubberStampButton;","import React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CollapsiblePanelGroup from 'components/CollapsiblePanelGroup';\n\nconst RubberStamp = React.memo(({ imgSrc, annotation, index, onClick, isActive }) => {\n  const [t] = useTranslation();\n\n  return (\n    <button\n      tabIndex={0}\n      key={index}\n      className={classNames('rubber-stamp', { 'active': isActive })}\n      aria-label={`${t('annotation.stamp')} ${index + 1}`}\n      onClick={() => onClick(annotation, index)}\n    >\n      <img src={imgSrc} alt=\"\" />\n    </button>\n  );\n});\n\nRubberStamp.displayName = 'RubberStamp';\n\nconst StandardRubberStamps = ({ standardStamps, selectedStampIndex, setSelectedRubberStamp }) => {\n  const [t] = useTranslation();\n  const rubberStamps = standardStamps.map(({ imgSrc, annotation }, index) => {\n    return (\n      <RubberStamp\n        key={index}\n        index={index}\n        imgSrc={imgSrc}\n        annotation={annotation}\n        onClick={setSelectedRubberStamp}\n        isActive={selectedStampIndex === index}\n      />\n    );\n  });\n\n  const header = useCallback(() => {\n    return (\n      <div className='rubber-stamps-list-header'>\n        {t('rubberStampPanel.standard')}\n      </div>\n    );\n  }, [t]);\n\n  return (\n    <CollapsiblePanelGroup\n      header={header}>\n      <div className='rubber-stamps-list'>\n        {rubberStamps}\n      </div>\n    </CollapsiblePanelGroup>\n  );\n};\n\nStandardRubberStamps.displayName = 'StandardRubberStamps';\nexport default React.memo(StandardRubberStamps);","import React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport core from 'core';\nimport classNames from 'classnames';\nimport Icon from 'components/Icon';\n\nconst TOOL_NAME = 'AnnotationCreateRubberStamp';\n\nconst CustomRubberStamp = React.memo((\n  {\n    imgSrc,\n    annotation,\n    index,\n    onClick,\n    deleteHandler,\n    standardStampsOffset,\n    isActive,\n  }) => {\n  const [t] = useTranslation();\n\n  return (\n    <div className='custom-rubber-stamp-row' tabIndex='0'>\n      <button\n        key={index}\n        className={classNames('rubber-stamp', { 'active': isActive })}\n        aria-label={`${t('annotation.stamp')} ${index + 1}`}\n        onClick={() => onClick(annotation, index + standardStampsOffset)}\n      >\n        <img src={imgSrc} alt=\"\" />\n      </button>\n      <button\n        className=\"icon-button\"\n        data-element=\"defaultSignatureDeleteButton\"\n        onClick={() => {\n          deleteHandler(index);\n        }}\n      >\n        <Icon glyph=\"icon-delete-line\" />\n      </button>\n    </div>\n  );\n});\n\nCustomRubberStamp.displayName = 'CustomRubberStamp';\n\n\nconst CustomRubberStamps = (\n  {\n    customStamps,\n    selectedStampIndex,\n    setSelectedRubberStamp,\n    standardStampsOffset,\n  }) => {\n  const stampToolArray = core.getToolsFromAllDocumentViewers(TOOL_NAME);\n\n  const deleteCustomStamp = useCallback((index) => {\n    for (const tool of stampToolArray) {\n      const stamps = tool.getCustomStamps();\n      tool.deleteCustomStamps([stamps[index]]);\n    }\n  }, []);\n\n  const rubberStamps = customStamps.map(({ imgSrc, annotation }, index) => {\n    return (\n      <CustomRubberStamp\n        key={index}\n        index={index}\n        imgSrc={imgSrc}\n        annotation={annotation}\n        onClick={setSelectedRubberStamp}\n        standardStampsOffset={standardStampsOffset}\n        deleteHandler={deleteCustomStamp}\n        isActive={selectedStampIndex === (index + standardStampsOffset)}\n      />\n    );\n  });\n\n  if (customStamps.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className='rubber-stamps-list'>\n      {rubberStamps}\n    </div>\n  );\n};\n\nCustomRubberStamps.displayName = 'CustomRubberStamps';\nexport default React.memo(CustomRubberStamps);","import React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport core from 'core';\nimport DataElements from 'constants/dataElement';\nimport DataElementWrapper from 'components/DataElementWrapper';\nimport CreateRubberStampButton from './CreateRubberStampButton';\nimport Divider from '../ModularComponents/Divider';\nimport './RubberStampPanel.scss';\nimport StandardRubberStamps from './StandardRubberStamps';\nimport CustomRubberStamps from './CustomRubberStamps';\n\nconst TOOL_NAME = 'AnnotationCreateRubberStamp';\n\nconst RubberStampPanel = () => {\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n  const stampToolArray = core.getToolsFromAllDocumentViewers(TOOL_NAME);\n\n  const [\n    standardStamps,\n    customStamps,\n    selectedStampIndex,\n  ] = useSelector(\n    (state) => [\n      selectors.getStandardStamps(state),\n      selectors.getCustomStamps(state),\n      selectors.getSelectedStampIndex(state),\n    ],\n    shallowEqual,\n  );\n  const setSelectedRubberStamp = useCallback(async (annotation, index) => {\n    core.setToolMode(TOOL_NAME);\n    for (const tool of stampToolArray) {\n      const text = t(`rubberStamp.${annotation['Icon']}`);\n      await tool.setRubberStamp(annotation, text);\n      tool.showPreview();\n    }\n    dispatch(actions.setSelectedStampIndex(index));\n  }, []);\n\n  return (\n    <DataElementWrapper dataElement={DataElements.RUBBER_STAMP_PANEL} className=\"Panel RubberStampPanel\">\n      <div className='rubber-stamp-panel-header'>\n        {t('rubberStampPanel.header')}\n      </div>\n      <CreateRubberStampButton />\n      <div className='rubber-stamps-container'>\n        <CustomRubberStamps\n          selectedStampIndex={selectedStampIndex}\n          standardStampsOffset={standardStamps.length}\n          setSelectedRubberStamp={setSelectedRubberStamp}\n          customStamps={customStamps} />\n        <Divider />\n        <StandardRubberStamps\n          setSelectedRubberStamp={setSelectedRubberStamp}\n          standardStamps={standardStamps}\n          selectedStampIndex={selectedStampIndex} />\n      </div>\n\n    </DataElementWrapper>\n  );\n};\n\nexport default RubberStampPanel;","import RubberStampPanel from './RubberStampPanel';\n\nexport default RubberStampPanel;"],"sourceRoot":""}