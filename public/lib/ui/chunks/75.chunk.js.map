{"version":3,"sources":["webpack:///./src/ui/src/components/LinkModal/LinkModal.js","webpack:///./src/ui/src/components/LinkModal/index.js"],"names":["i","LinkModal","rightClickedAnnotation","setRightClickedAnnotation","useSelector","state","selectors","isElementDisabled","DataElements","LINK_MODAL","isElementOpen","getTotalPages","getCurrentPage","getSelectedTab","getPageLabels","isRightClickAnnotationPopupEnabled","isDisabled","isOpen","totalPages","currentPage","tabSelected","pageLabels","t","useTranslation","dispatch","useDispatch","urlInput","React","createRef","pageLabelInput","useState","url","setURL","pageLabel","setPageLabel","isRightClickedAnnotationSelected","core","isAnnotationSelected","selectedAnnotations","getSelectedAnnotations","annotManager","getAnnotationManager","closeModal","actions","closeElement","setToolMode","defaultTool","newLink","x","y","width","height","linkPageNumber","link","window","Core","Annotations","Link","PageNumber","StrokeColor","Color","StrokeStyle","StrokeThickness","Author","getCurrentUser","Subject","X","Y","Width","Height","createLink","action","linksResults","quads","getSelectedTextQuads","selectedText","getSelectedText","currPageLinks","currPageNumber","forEach","quad","push","Math","min","x1","x3","y1","y3","abs","parseInt","createHighlightAnnot","annot","groupedAnnots","getGroupAnnotations","length","linksToDelete","filter","deleteAnnotations","addAction","addAnnotations","groupAnnotations","linkAnnotArray","text","linkAnnot","highlight","TextHighlightAnnotation","Opacity","Quads","setContents","index","addURLLink","e","preventDefault","urlWithProtocol","isValidURI","Actions","URI","uri","pageNumbersToDraw","map","Set","pageNumberToDraw","drawAnnotations","addPageLink","options","dest","Dest","GoTo","page","indexOf","useEffect","urls","match","current","focus","addEventListener","removeEventListener","modalClass","classNames","Modal","open","closed","onSwipedUp","onSwipedDown","preventDefaultTouchmoveEvent","className","data-element","onMouseDown","stopPropagation","Tabs","id","dataElement","onSubmit","ref","value","onChange","target","Button","label","onClick","disabled","includes"],"mappings":"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","file":"chunks/75.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport defaultTool from 'constants/defaultTool';\nimport core from 'core';\nimport { Tabs, Tab, TabPanel } from 'components/Tabs';\nimport Button from 'components/Button';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport { Swipeable } from 'react-swipeable';\nimport DataElements from 'constants/dataElement';\n\nimport './LinkModal.scss';\n\nconst LinkModal = ({ rightClickedAnnotation, setRightClickedAnnotation }) => {\n  const [\n    isDisabled,\n    isOpen,\n    totalPages,\n    currentPage,\n    tabSelected,\n    pageLabels,\n    isRightClickAnnotationPopupEnabled,\n  ] = useSelector((state) => [\n    selectors.isElementDisabled(state, DataElements.LINK_MODAL),\n    selectors.isElementOpen(state, DataElements.LINK_MODAL),\n    selectors.getTotalPages(state),\n    selectors.getCurrentPage(state),\n    selectors.getSelectedTab(state, DataElements.LINK_MODAL),\n    selectors.getPageLabels(state),\n    selectors.isRightClickAnnotationPopupEnabled(state),\n  ]);\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n\n  const urlInput = React.createRef();\n  const pageLabelInput = React.createRef();\n\n  const [url, setURL] = useState('');\n  const [pageLabel, setPageLabel] = useState('');\n  const isRightClickedAnnotationSelected = core.isAnnotationSelected(rightClickedAnnotation);\n  const selectedAnnotations = core.getSelectedAnnotations();\n  const annotManager = core.getAnnotationManager();\n\n  const closeModal = () => {\n    dispatch(actions.closeElement(DataElements.LINK_MODAL));\n    setURL('');\n    core.setToolMode(defaultTool);\n    setRightClickedAnnotation(null);\n  };\n\n  const newLink = (x, y, width, height, linkPageNumber = currentPage) => {\n    const link = new window.Core.Annotations.Link();\n    link.PageNumber = linkPageNumber;\n    link.StrokeColor = new window.Core.Annotations.Color(0, 165, 228);\n    link.StrokeStyle = 'underline';\n    link.StrokeThickness = 2;\n    link.Author = core.getCurrentUser();\n    link.Subject = 'Link';\n    link.X = x;\n    link.Y = y;\n    link.Width = width;\n    link.Height = height;\n    return link;\n  };\n\n  const createLink = (action) => {\n    const linksResults = [];\n\n    const quads = core.getSelectedTextQuads();\n\n    // If annotation popup is on right click, this won't clear selected text if there's any, adding links will add links for both right-clicked annotation and selected text\n    if (quads) {\n      const selectedText = core.getSelectedText();\n      for (const currPageNumber in quads) {\n        const currPageLinks = [];\n        quads[currPageNumber].forEach((quad) => {\n          currPageLinks.push(\n            newLink(\n              Math.min(quad.x1, quad.x3),\n              Math.min(quad.y1, quad.y3),\n              Math.abs(quad.x1 - quad.x3),\n              Math.abs(quad.y1 - quad.y3),\n              parseInt(currPageNumber)\n            )\n          );\n        });\n        createHighlightAnnot(\n          currPageLinks,\n          quads[currPageNumber],\n          selectedText,\n          action\n        );\n        linksResults.push(...currPageLinks);\n      }\n    }\n\n    const annotationsToAddLink = (!isRightClickAnnotationPopupEnabled || isRightClickedAnnotationSelected) ? selectedAnnotations : [rightClickedAnnotation];\n\n    annotationsToAddLink.forEach((annot) => {\n      if (!annot) {\n        return;\n      }\n      const groupedAnnots = annotManager.getGroupAnnotations(annot);\n      if (groupedAnnots.length > 1) {\n        const linksToDelete = groupedAnnots.filter((annot) => annot instanceof window.Core.Annotations.Link);\n        if (linksToDelete.length > 0) {\n          core.deleteAnnotations(linksToDelete);\n        }\n      }\n\n      // if multi-select an annotation with no link option with an annotation with link option and right click on the latter, link button will show up and will add links for all annotations\n      const link = newLink(annot.X, annot.Y, annot.Width, annot.Height);\n      link.addAction('U', action);\n      core.addAnnotations([link]);\n      linksResults.push(link);\n      annotManager.groupAnnotations(annot, [link]);\n    });\n\n    return linksResults;\n  };\n\n  const createHighlightAnnot = async (linkAnnotArray, quads, text, action) => {\n    const annotManager = core.getAnnotationManager();\n    const linkAnnot = linkAnnotArray[0];\n    const highlight = new window.Core.Annotations.TextHighlightAnnotation();\n    highlight.PageNumber = linkAnnot.PageNumber;\n    highlight.X = linkAnnot.X;\n    highlight.Y = linkAnnot.Y;\n    highlight.Width = linkAnnot.Width;\n    highlight.Height = linkAnnot.Height;\n    highlight.StrokeColor = new window.Core.Annotations.Color(0, 0, 0, 0);\n    highlight.Opacity = 0;\n    highlight.Quads = quads;\n    highlight.Author = core.getCurrentUser();\n    highlight.setContents(text);\n\n    linkAnnotArray.forEach((link, index) => {\n      link.addAction('U', action);\n      index === 0 ? core.addAnnotations([link, highlight]) : core.addAnnotations([link]);\n    });\n    annotManager.groupAnnotations(highlight, linkAnnotArray);\n  };\n\n  const addURLLink = (e) => {\n    e.preventDefault();\n\n    if (!url.length) {\n      return;\n    }\n\n    let urlWithProtocol;\n    if (!core.isValidURI(url)) {\n      urlWithProtocol = `https://${url}`;\n    } else {\n      urlWithProtocol = url;\n    }\n\n    const action = new window.Core.Actions.URI({ uri: urlWithProtocol });\n    const links = createLink(action);\n\n    let pageNumbersToDraw = links.map((link) => link.PageNumber);\n    pageNumbersToDraw = [...new Set(pageNumbersToDraw)];\n    pageNumbersToDraw.forEach((pageNumberToDraw) => {\n      core.drawAnnotations(pageNumberToDraw, null, true);\n    });\n\n    closeModal();\n  };\n\n  const isValidPageLabel = () => {\n    return pageLabels?.includes(pageLabel);\n  };\n\n  const addPageLink = (e) => {\n    e.preventDefault();\n\n    const Dest = window.Core.Actions.GoTo.Dest;\n\n    const options = { dest: new Dest({ page: pageLabels.indexOf(pageLabel) + 1 }) };\n    const action = new window.Core.Actions.GoTo(options);\n\n    const links = createLink(action);\n\n    let pageNumbersToDraw = links.map((link) => link.PageNumber);\n    pageNumbersToDraw = [...new Set(pageNumbersToDraw)];\n    pageNumbersToDraw.forEach((pageNumberToDraw) => {\n      core.drawAnnotations(pageNumberToDraw, null, true);\n    });\n\n    closeModal();\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      //  prepopulate URL if URL is selected\n      const selectedText = core.getSelectedText();\n      if (selectedText) {\n        const urlRegex = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\n        const urls = selectedText.match(urlRegex);\n        if (urls && urls.length > 0) {\n          setURL(urls[0]);\n        }\n      }\n\n      setPageLabel(pageLabels.length > 0 ? pageLabels[0] : '1');\n    }\n  }, [totalPages, isOpen]);\n\n  useEffect(() => {\n    if (tabSelected === 'PageNumberPanelButton' && isOpen) {\n      pageLabelInput.current.focus();\n    } else if (tabSelected === 'URLPanelButton' && isOpen) {\n      urlInput.current.focus();\n    }\n  }, [tabSelected, isOpen, pageLabelInput, urlInput]);\n\n  useEffect(() => {\n    core.addEventListener('documentUnloaded', closeModal);\n    return () => {\n      core.removeEventListener('documentUnloaded', closeModal);\n    };\n  }, []);\n\n  const modalClass = classNames({\n    Modal: true,\n    LinkModal: true,\n    open: isOpen,\n    closed: !isOpen,\n  });\n\n  return isDisabled ? null : (\n    <Swipeable\n      onSwipedUp={closeModal}\n      onSwipedDown={closeModal}\n      preventDefaultTouchmoveEvent\n    >\n      <div\n        className={modalClass}\n        data-element={DataElements.LINK_MODAL}\n        onMouseDown={closeModal}\n      >\n        <div className=\"container\" onMouseDown={(e) => e.stopPropagation()}>\n          <div className=\"swipe-indicator\" />\n          <Tabs id=\"linkModal\">\n            <div className=\"tab-list\">\n              <Tab dataElement=\"URLPanelButton\">\n                <div className=\"tab-options-button\">{t('link.url')}</div>\n              </Tab>\n              <div className=\"tab-options-divider\" />\n              <Tab dataElement=\"PageNumberPanelButton\">\n                <div className=\"tab-options-button\">{t('link.page')}</div>\n              </Tab>\n            </div>\n\n            <TabPanel dataElement=\"URLPanel\">\n              <form onSubmit={addURLLink}>\n                <div>{t('link.enterurl')}</div>\n                <div className=\"linkInput\">\n                  <input\n                    className=\"urlInput\"\n                    ref={urlInput}\n                    value={url}\n                    onChange={(e) => setURL(e.target.value)}\n                  />\n                  <Button\n                    dataElement=\"linkSubmitButton\"\n                    label={t('action.link')}\n                    onClick={addURLLink}\n                    disabled={!url.length}\n                  />\n                </div>\n              </form>\n            </TabPanel>\n            <TabPanel dataElement=\"PageNumberPanel\">\n              <form onSubmit={addPageLink}>\n                <div>{t('link.enterpage')}</div>\n                <div className=\"linkInput\">\n                  <input\n                    ref={pageLabelInput}\n                    value={pageLabel}\n                    onChange={(e) => setPageLabel(e.target.value)}\n                  />\n                  <Button\n                    dataElement=\"linkSubmitButton\"\n                    label={t('action.link')}\n                    onClick={addPageLink}\n                    disabled={!isValidPageLabel()}\n                  />\n                </div>\n              </form>\n            </TabPanel>\n          </Tabs>\n        </div>\n      </div>\n    </Swipeable>\n  );\n};\n\nexport default LinkModal;\n","import LinkModal from './LinkModal';\n\nexport default LinkModal;"],"sourceRoot":""}